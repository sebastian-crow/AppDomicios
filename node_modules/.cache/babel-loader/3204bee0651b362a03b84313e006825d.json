{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/views/sample-page/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from \"react-router-dom\"; // material-ui\n\nimport { Typography } from '@material-ui/core'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard'; // Header\n\nimport MainLayout from '../../layout/MainLayout'; //= =============================|| SAMPLE PAGE ||==============================//\n\nimport { useDispatch, useSelector } from \"react-redux\"; // Actions\n\nimport { updatePositionAction, getFromUserPositionAction, createPositionAction, getAllDomiciliarioAction } from \"../../store/storeAddresses/store/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SamplePage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userID = useSelector(state => state.login.usuario.user._id);\n  const position = useSelector(state => state.ui.position);\n  const positionId = useSelector(state => state.ui.positionId);\n  const user = useSelector(state => state.login.usuario.user);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      dispatch(getFromUserPositionAction(userID));\n      const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      };\n\n      function success(pos) {\n        var crd = pos.coords;\n\n        if (positionId) {\n          dispatch(updatePositionAction({\n            lat: crd.latitude,\n            lng: crd.longitude,\n            positionId: positionId\n          }));\n        } else {\n          dispatch(createPositionAction({\n            position: JSON.stringify({\n              lat: crd.latitude,\n              lng: crd.longitude\n            }),\n            usuario: userID\n          }));\n        }\n      }\n\n      ;\n\n      function error(err) {\n        console.warn('ERROR(' + err.code + '): ' + err.message);\n      }\n\n      ;\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [dispatch, position, positionId, userID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/mapbox\",\n      children: \"mapbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SamplePage, \"dHB8CkE4JFfbylEBtQrqbffc8CU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SamplePage;\nexport default SamplePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SamplePage\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/views/sample-page/index.js"],"names":["React","useEffect","Link","Typography","MainCard","MainLayout","useDispatch","useSelector","updatePositionAction","getFromUserPositionAction","createPositionAction","getAllDomiciliarioAction","SamplePage","dispatch","userID","state","login","usuario","user","_id","position","ui","positionId","timer","setInterval","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","coords","lat","latitude","lng","longitude","JSON","stringify","error","err","console","warn","code","message","navigator","geolocation","getCurrentPosition","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,6BAArB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CAEA;;AAGA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAGA;;AACA,SAASC,oBAAT,EAA+BC,yBAA/B,EAA0DC,oBAA1D,EAAgFC,wBAAhF,QAAgH,0CAAhH;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyBC,GAArC,CAA1B;AACA,QAAMC,QAAQ,GAAGb,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACM,EAAN,CAASD,QAArB,CAA5B;AACA,QAAME,UAAU,GAAGf,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACM,EAAN,CAASC,UAArB,CAA9B;AACA,QAAMJ,IAAI,GAAGX,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,IAAhC,CAAxB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BX,MAAAA,QAAQ,CAACJ,yBAAyB,CAACK,MAAD,CAA1B,CAAR;AACA,YAAMW,OAAO,GAAG;AACdC,QAAAA,kBAAkB,EAAE,IADN;AAEdC,QAAAA,OAAO,EAAE,IAFK;AAGdC,QAAAA,UAAU,EAAE;AAHE,OAAhB;;AAMA,eAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,YAAIC,GAAG,GAAGD,GAAG,CAACE,MAAd;;AACA,YAAIV,UAAJ,EAAgB;AACdT,UAAAA,QAAQ,CAACL,oBAAoB,CAAC;AAAEyB,YAAAA,GAAG,EAAEF,GAAG,CAACG,QAAX;AAAqBC,YAAAA,GAAG,EAAEJ,GAAG,CAACK,SAA9B;AAAyCd,YAAAA,UAAU,EAAEA;AAArD,WAAD,CAArB,CAAR;AACD,SAFD,MAEO;AACLT,UAAAA,QAAQ,CAACH,oBAAoB,CAAC;AAAEU,YAAAA,QAAQ,EAAEiB,IAAI,CAACC,SAAL,CAAe;AAAEL,cAAAA,GAAG,EAAEF,GAAG,CAACG,QAAX;AAAqBC,cAAAA,GAAG,EAAEJ,GAAG,CAACK;AAA9B,aAAf,CAAZ;AAAuEnB,YAAAA,OAAO,EAAEH;AAAhF,WAAD,CAArB,CAAR;AACD;AACF;;AAAA;;AAED,eAASyB,KAAT,CAAeC,GAAf,EAAoB;AAClBC,QAAAA,OAAO,CAACC,IAAR,CAAa,WAAWF,GAAG,CAACG,IAAf,GAAsB,KAAtB,GAA8BH,GAAG,CAACI,OAA/C;AACD;;AAAA;AAEDC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyClB,OAAzC,EAAkDU,KAAlD,EAAyDd,OAAzD;AACD,KAtBwB,EAsBtB,IAtBsB,CAAzB;AAwBA,WAAO,MAAMuB,YAAY,CAACzB,KAAD,CAAzB;AACD,GA1BQ,EA0BN,CAACV,QAAD,EAAWO,QAAX,EAAqBE,UAArB,EAAiCR,MAAjC,CA1BM,CAAT;AA6BA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CA1CD;;GAAMF,U;UACeN,W,EACFC,W,EACEA,W,EACEA,W,EACNA,W;;;KALXK,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\n\n// material-ui\nimport { Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// Header\nimport MainLayout from '../../layout/MainLayout'\n\n//= =============================|| SAMPLE PAGE ||==============================//\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n// Actions\nimport { updatePositionAction, getFromUserPositionAction, createPositionAction, getAllDomiciliarioAction } from \"../../store/storeAddresses/store/reducer\";\n\nconst SamplePage = () => {\n    const dispatch = useDispatch();\n    const userID = useSelector((state) => state.login.usuario.user._id);\n    const position = useSelector((state) => state.ui.position);\n    const positionId = useSelector((state) => state.ui.positionId);\n    const user = useSelector((state) => state.login.usuario.user)\n  \n    useEffect(() => {\n      const timer = setInterval(() => {\n        dispatch(getFromUserPositionAction(userID));\n        const options = {\n          enableHighAccuracy: true,\n          timeout: 5000,\n          maximumAge: 0\n        };\n  \n        function success(pos) {\n          var crd = pos.coords;\n          if (positionId) {\n            dispatch(updatePositionAction({ lat: crd.latitude, lng: crd.longitude, positionId: positionId }));\n          } else {\n            dispatch(createPositionAction({ position: JSON.stringify({ lat: crd.latitude, lng: crd.longitude }), usuario: userID }));\n          }\n        };\n  \n        function error(err) {\n          console.warn('ERROR(' + err.code + '): ' + err.message);\n        };\n  \n        navigator.geolocation.getCurrentPosition(success, error, options);\n      }, 5000);\n  \n      return () => clearTimeout(timer);\n    }, [dispatch, position, positionId, userID]);\n\n\n    return (\n        <>\n            <MainLayout />\n            <Link to=\"/mapbox\">mapbox</Link>\n        </>\n    )\n}\nexport default SamplePage;\n"]},"metadata":{},"sourceType":"module"}