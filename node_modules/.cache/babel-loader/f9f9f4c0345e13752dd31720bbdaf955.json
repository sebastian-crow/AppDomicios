{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/layout/MainLayout/Header/NotificationSection/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Avatar, Box, Button, ButtonBase, CardActions, CardContent, Chip, ClickAwayListener, Divider, Grid, Paper, Popper, Stack, TextField, Typography, useMediaQuery } from '@material-ui/core'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport Transitions from 'ui-component/extended/Transitions';\nimport NotificationList from './NotificationList'; // assets\n\nimport { IconBell } from '@tabler/icons'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  ScrollHeight: {\n    height: '100%',\n    maxHeight: 'calc(100vh - 205px)',\n    overflowX: 'hidden'\n  },\n  headerAvatar: { ...theme.typography.commonAvatar,\n    ...theme.typography.mediumAvatar,\n    transition: 'all .2s ease-in-out',\n    background: theme.palette.secondary.light,\n    color: theme.palette.secondary.dark,\n    '&[aria-controls=\"menu-list-grow\"],&:hover': {\n      background: theme.palette.secondary.dark,\n      color: theme.palette.secondary.light\n    }\n  },\n  cardContent: {\n    padding: '0px !important'\n  },\n  notificationChip: {\n    color: theme.palette.background.default,\n    backgroundColor: theme.palette.warning.dark\n  },\n  divider: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  cardAction: {\n    padding: '10px',\n    justifyContent: 'center'\n  },\n  paddingBottom: {\n    paddingBottom: '16px'\n  },\n  box: {\n    marginLeft: '16px',\n    marginRight: '24px',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: '16px'\n    }\n  },\n  bodyPPacing: {\n    padding: '16px 16px 0'\n  },\n  textBoxSpacing: {\n    padding: '0px 16px'\n  }\n})); // notification status options\n\nconst status = [{\n  value: 'all',\n  label: 'All Notification'\n}, {\n  value: 'new',\n  label: 'New'\n}, {\n  value: 'unread',\n  label: 'Unread'\n}, {\n  value: 'other',\n  label: 'Other'\n}]; // ===========================|| NOTIFICATION ||=========================== //\n\nconst NotificationSection = () => {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const matchesXs = useMediaQuery(theme.breakpoints.down('sm'));\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('');\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      component: \"span\",\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n        sx: {\n          borderRadius: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          variant: \"rounded\",\n          className: classes.headerAvatar,\n          ref: anchorRef,\n          \"aria-controls\": open ? 'menu-list-grow' : undefined,\n          \"aria-haspopup\": \"true\",\n          onClick: handleToggle,\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(IconBell, {\n            stroke: 1.5,\n            size: \"1.3rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popper, {\n      placement: matchesXs ? 'bottom' : 'bottom-end',\n      open: open,\n      anchorEl: anchorRef.current,\n      role: undefined,\n      transition: true,\n      disablePortal: true,\n      popperOptions: {\n        modifiers: [{\n          name: 'offset',\n          options: {\n            offset: [matchesXs ? 5 : 0, 20]\n          }\n        }]\n      },\n      children: ({\n        TransitionProps\n      }) => /*#__PURE__*/_jsxDEV(Transitions, {\n        in: open,\n        ...TransitionProps,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n            onClickAway: handleClose,\n            children: /*#__PURE__*/_jsxDEV(MainCard, {\n              border: false,\n              elevation: 16,\n              content: false,\n              boxShadow: true,\n              shadow: theme.shadows[16],\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                className: classes.cardContent,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.bodyPPacing,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        alignItems: \"center\",\n                        justifyContent: \"space-between\",\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: /*#__PURE__*/_jsxDEV(Stack, {\n                            direction: \"row\",\n                            spacing: 2,\n                            children: [/*#__PURE__*/_jsxDEV(Typography, {\n                              variant: \"subtitle1\",\n                              children: \"All Notification\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 188,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                              size: \"small\",\n                              label: \"01\",\n                              className: classes.notificationChip\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 189,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 187,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: /*#__PURE__*/_jsxDEV(Typography, {\n                            component: Link,\n                            to: \"#\",\n                            variant: \"subtitle2\",\n                            color: \"primary\",\n                            children: \"Mark as all read\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 193,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 192,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n                      className: classes.ScrollHeight,\n                      children: /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        direction: \"column\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: classes.textBoxSpacing,\n                            children: /*#__PURE__*/_jsxDEV(TextField, {\n                              id: \"outlined-select-currency-native\",\n                              select: true,\n                              fullWidth: true,\n                              value: value,\n                              onChange: handleChange,\n                              SelectProps: {\n                                native: true\n                              },\n                              children: status.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                                value: option.value,\n                                children: option.label\n                              }, option.value, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 216,\n                                columnNumber: 73\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 205,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 204,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          p: 0,\n                          children: /*#__PURE__*/_jsxDEV(Divider, {\n                            className: classes.divider\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          children: /*#__PURE__*/_jsxDEV(NotificationList, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 227,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                className: classes.cardAction,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  disableElevation: true,\n                  children: \"View All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NotificationSection, \"H6wMTamUISyEenW3BNExgB6FbXE=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = NotificationSection;\nexport default NotificationSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationSection\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/layout/MainLayout/Header/NotificationSection/index.js"],"names":["React","Link","makeStyles","useTheme","Avatar","Box","Button","ButtonBase","CardActions","CardContent","Chip","ClickAwayListener","Divider","Grid","Paper","Popper","Stack","TextField","Typography","useMediaQuery","PerfectScrollbar","MainCard","Transitions","NotificationList","IconBell","useStyles","theme","ScrollHeight","height","maxHeight","overflowX","headerAvatar","typography","commonAvatar","mediumAvatar","transition","background","palette","secondary","light","color","dark","cardContent","padding","notificationChip","default","backgroundColor","warning","divider","marginTop","marginBottom","cardAction","justifyContent","paddingBottom","box","marginLeft","marginRight","breakpoints","down","bodyPPacing","textBoxSpacing","status","value","label","NotificationSection","classes","matchesXs","open","setOpen","useState","setValue","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","useEffect","focus","handleChange","borderRadius","undefined","modifiers","name","options","offset","TransitionProps","shadows","native","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n    Avatar,\n    Box,\n    Button,\n    ButtonBase,\n    CardActions,\n    CardContent,\n    Chip,\n    ClickAwayListener,\n    Divider,\n    Grid,\n    Paper,\n    Popper,\n    Stack,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@material-ui/core';\n\n// third-party\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\nimport Transitions from 'ui-component/extended/Transitions';\nimport NotificationList from './NotificationList';\n\n// assets\nimport { IconBell } from '@tabler/icons';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    ScrollHeight: {\n        height: '100%',\n        maxHeight: 'calc(100vh - 205px)',\n        overflowX: 'hidden'\n    },\n    headerAvatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        transition: 'all .2s ease-in-out',\n        background: theme.palette.secondary.light,\n        color: theme.palette.secondary.dark,\n        '&[aria-controls=\"menu-list-grow\"],&:hover': {\n            background: theme.palette.secondary.dark,\n            color: theme.palette.secondary.light\n        }\n    },\n    cardContent: {\n        padding: '0px !important'\n    },\n    notificationChip: {\n        color: theme.palette.background.default,\n        backgroundColor: theme.palette.warning.dark\n    },\n    divider: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    cardAction: {\n        padding: '10px',\n        justifyContent: 'center'\n    },\n    paddingBottom: {\n        paddingBottom: '16px'\n    },\n    box: {\n        marginLeft: '16px',\n        marginRight: '24px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '16px'\n        }\n    },\n    bodyPPacing: {\n        padding: '16px 16px 0'\n    },\n    textBoxSpacing: {\n        padding: '0px 16px'\n    }\n}));\n\n// notification status options\nconst status = [\n    {\n        value: 'all',\n        label: 'All Notification'\n    },\n    {\n        value: 'new',\n        label: 'New'\n    },\n    {\n        value: 'unread',\n        label: 'Unread'\n    },\n    {\n        value: 'other',\n        label: 'Other'\n    }\n];\n\n// ===========================|| NOTIFICATION ||=========================== //\n\nconst NotificationSection = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const matchesXs = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [open, setOpen] = React.useState(false);\n    const [value, setValue] = React.useState('');\n    const anchorRef = React.useRef(null);\n\n    const handleToggle = () => {\n        setOpen((prevOpen) => !prevOpen);\n    };\n\n    const handleClose = (event) => {\n        if (anchorRef.current && anchorRef.current.contains(event.target)) {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const prevOpen = React.useRef(open);\n    React.useEffect(() => {\n        if (prevOpen.current === true && open === false) {\n            anchorRef.current.focus();\n        }\n        prevOpen.current = open;\n    }, [open]);\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n\n    return (\n        <>\n            <Box component=\"span\" className={classes.box}>\n                <ButtonBase sx={{ borderRadius: '12px' }}>\n                    <Avatar\n                        variant=\"rounded\"\n                        className={classes.headerAvatar}\n                        ref={anchorRef}\n                        aria-controls={open ? 'menu-list-grow' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleToggle}\n                        color=\"inherit\"\n                    >\n                        <IconBell stroke={1.5} size=\"1.3rem\" />\n                    </Avatar>\n                </ButtonBase>\n            </Box>\n            <Popper\n                placement={matchesXs ? 'bottom' : 'bottom-end'}\n                open={open}\n                anchorEl={anchorRef.current}\n                role={undefined}\n                transition\n                disablePortal\n                popperOptions={{\n                    modifiers: [\n                        {\n                            name: 'offset',\n                            options: {\n                                offset: [matchesXs ? 5 : 0, 20]\n                            }\n                        }\n                    ]\n                }}\n            >\n                {({ TransitionProps }) => (\n                    <Transitions in={open} {...TransitionProps}>\n                        <Paper>\n                            <ClickAwayListener onClickAway={handleClose}>\n                                <MainCard border={false} elevation={16} content={false} boxShadow shadow={theme.shadows[16]}>\n                                    <CardContent className={classes.cardContent}>\n                                        <Grid container direction=\"column\" spacing={2}>\n                                            <Grid item xs={12}>\n                                                <div className={classes.bodyPPacing}>\n                                                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                        <Grid item>\n                                                            <Stack direction=\"row\" spacing={2}>\n                                                                <Typography variant=\"subtitle1\">All Notification</Typography>\n                                                                <Chip size=\"small\" label=\"01\" className={classes.notificationChip} />\n                                                            </Stack>\n                                                        </Grid>\n                                                        <Grid item>\n                                                            <Typography component={Link} to=\"#\" variant=\"subtitle2\" color=\"primary\">\n                                                                Mark as all read\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </div>\n                                            </Grid>\n                                            <Grid item xs={12}>\n                                                <PerfectScrollbar className={classes.ScrollHeight}>\n                                                    <Grid container direction=\"column\" spacing={2}>\n                                                        <Grid item xs={12}>\n                                                            <div className={classes.textBoxSpacing}>\n                                                                <TextField\n                                                                    id=\"outlined-select-currency-native\"\n                                                                    select\n                                                                    fullWidth\n                                                                    value={value}\n                                                                    onChange={handleChange}\n                                                                    SelectProps={{\n                                                                        native: true\n                                                                    }}\n                                                                >\n                                                                    {status.map((option) => (\n                                                                        <option key={option.value} value={option.value}>\n                                                                            {option.label}\n                                                                        </option>\n                                                                    ))}\n                                                                </TextField>\n                                                            </div>\n                                                        </Grid>\n                                                        <Grid item xs={12} p={0}>\n                                                            <Divider className={classes.divider} />\n                                                        </Grid>\n                                                        <Grid item xs={12}>\n                                                            <NotificationList />\n                                                        </Grid>\n                                                    </Grid>\n                                                </PerfectScrollbar>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                    <Divider />\n                                    <CardActions className={classes.cardAction}>\n                                        <Button size=\"small\" disableElevation>\n                                            View All\n                                        </Button>\n                                    </CardActions>\n                                </MainCard>\n                            </ClickAwayListener>\n                        </Paper>\n                    </Transitions>\n                )}\n            </Popper>\n        </>\n    );\n};\n\nexport default NotificationSection;\n"]},"metadata":{},"sourceType":"module"}