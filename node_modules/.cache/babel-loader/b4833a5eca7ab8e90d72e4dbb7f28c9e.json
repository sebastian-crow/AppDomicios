{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/ui-component/addresses/orders/TakeOrder.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Counter } from '../counter/counter';\nimport { useEffect } from \"react\";\nimport { push } from \"redux-first-history\";\nimport { api } from \"../../../store/storeAddresses/store/middleware/api\";\nimport Geocode from \"react-geocode\"; // Material UI\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/styles';\nimport Container from \"@material-ui/core/Container\";\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip'; // Actions\n\nimport { createOrderAction, // Create order\ngetAllDomiciliarioAction, // Get Domiciliarios\ngetAllProductAction, // Get products\ngetFromUserPositionAction, // Get Position\nupdatePositionAction, // Update position\ncreatePositionAction // Create position for one user, in this case we gonna save the delevery man locations\n} from \"../../../store/storeAddresses/store/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, productName, theme) {\n  return {\n    fontWeight: productName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction CreateOrder({\n  props,\n  increment,\n  onClickFunction\n}) {\n  _s();\n\n  // Getting Real Time Location\n  const dispatch = useDispatch();\n  const position = useSelector(state => state.ui.position);\n  const positionId = useSelector(state => state.ui.positionId);\n  const users = useSelector(state => state.ui.domiciliarios);\n  const domiciliarioList = [...users];\n  const domiciliarios = useSelector(state => state.ui.domiciliarios);\n  const theme = useTheme(); // Styles\n\n  const [productName, setProductName] = React.useState([]);\n  const [domiciliarioName, setDomiciliarioName] = React.useState([]);\n  const [count, setCount] = useState(0); // Handlers\n\n  const handleClick = () => {\n    onClickFunction(increment);\n  };\n\n  const incrementCount = increment => {\n    setCount(count + increment);\n  }; // Handle get Name of the product\n\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setProductName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  }; // Hanlde Domiciliario State\n\n\n  const handleDomiciliarioChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setDomiciliarioName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  }; // Generate a random domiciliario for to save the order\n  //let randomDomiciliario = domiciliario[Math.floor(Math.random() * domiciliario.length)];\n  // Get products from the global state\n\n\n  const products = useSelector(state => state.ui.products); // Transform the object products in one Array for most easilier manipulation\n\n  const product = Array.from(products); // Get current user from the global state\n\n  const user = useSelector(state => state.login.usuario.user); // Get errors that will happends\n\n  const error = useSelector(state => state.login.errorCreateOrder); // Fields por send the query to the API\n\n  const productos = useFormInput(\"Selector\");\n  const direccion = useFormInput(\"\");\n  const orderName = useFormInput(\"\");\n  const remaining = 180000; // Time remaining since the order was created.\n\n  const domiciliario = useFormInput(\"\");\n  const classes = useStyles(); // Hanlde that send information to the API and then these datas will save into the database\n\n  const handleCreate = event => {\n    event.preventDefault();\n    let data = {\n      orderName: orderName.value,\n      fecha: Date.now(),\n      cliente: {\n        id: user._id,\n        name: user.nombre //location: clientLocation,\n\n      },\n      domiciliario: {\n        id: domiciliarioName[0]\n      },\n      productos: ContactProduct(),\n      // Function that contents Name of the product, amount of products and their own ID\n      //direccion: direccion.value,\n      direccion: {\n        address: direccion.value,\n        coords: address_coords\n      },\n      remaining\n    };\n    dispatch(createOrderAction(data));\n    dispatch(push(\"/orderlist\"));\n    console.log('ORDER CREATED', data);\n  }; // Geocoding handle for convert one address as coords\n  // set Google Maps API Key\n\n\n  Geocode.setApiKey(\"AIzaSyC3fhmeqzhFIthXezrymC_owJgFgH_yWgA\"); // set response language. Defaults to english.\n\n  Geocode.setLanguage(\"es\"); // set response region. Its optional.\n  // A Geocoding request with region=es (Spain) will return the Spanish city.\n\n  Geocode.setRegion(\"co\");\n  const address = direccion.value;\n  let address_coords;\n  Geocode.fromAddress(address).then(response => {\n    const {\n      lat,\n      lng\n    } = response.results[0].geometry.location;\n    address_coords = {\n      lat,\n      lng\n    };\n    console.log(address_coords);\n  }, error => {\n    console.error(error);\n  }); // Excecute actions\n  // Get all user's rol 'domiciliario'\n\n  React.useEffect(() => {\n    dispatch(getAllDomiciliarioAction());\n  }, [dispatch]); // Get Products Array\n\n  React.useEffect(() => {\n    dispatch(getAllProductAction());\n  }, [dispatch]);\n  const userID = domiciliarioName[0]; // Create / Update position\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      dispatch(getFromUserPositionAction(userID));\n      const options = {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      };\n      dispatch(getAllDomiciliarioAction());\n\n      function success(pos) {\n        var crd = pos.coords;\n\n        if (positionId) {\n          dispatch(updatePositionAction({\n            lat: crd.latitude,\n            lng: crd.longitude,\n            positionId: positionId\n          }));\n        } else {\n          dispatch(createPositionAction({\n            position: JSON.stringify({\n              lat: crd.latitude,\n              lng: crd.longitude\n            }),\n            usuario: userID\n          }));\n        }\n      }\n\n      ;\n\n      function error(err) {\n        console.warn('ERROR(' + err.code + '): ' + err.message);\n      }\n\n      ;\n      navigator.geolocation.getCurrentPosition(success, error, options);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [dispatch, position, positionId, userID]); // Counter for give the amount of the products\n\n  const amountProducts = useSelector(state => state.counter.value); // Function that contents Name of the product, amount of products and their own ID\n\n  const ContactProduct = () => {\n    let productoFinal, id, nombre;\n\n    for (let i = 0; i < productName.length; i++) {\n      nombre = productName[i];\n    }\n\n    for (let i = 0; i < product.length; i++) {\n      if (product[i].nombre === nombre) {\n        id = product[i]._id;\n      }\n    }\n\n    return productoFinal = productName.map(product => {\n      return {\n        nombre: product,\n        id: id,\n        cantidad: amountProducts\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), \" Take Order\", \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          autoComplete: \"off\",\n          onSubmit: handleCreate,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                autoComplete: \"orderName\",\n                name: \"orderName\",\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                id: \"orderName\",\n                label: \"Nombre de la orden\",\n                autoFocus: true,\n                ...orderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"menuDomiciliario\",\n            sx: {\n              m: 1,\n              width: 395\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-multiple-name-label\",\n              children: \"Domiciliario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-multiple-name-label\",\n              id: \"demo-multiple-name\",\n              multiple: true,\n              value: domiciliarioName,\n              onChange: handleDomiciliarioChange,\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Domiciliario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 24\n              }, this),\n              MenuProps: MenuProps,\n              children: domiciliarios.map(domiciliario => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: domiciliario._id //style={getStyles(domiciliario, domiciliarioName, theme)}\n                ,\n                children: domiciliario.nombre\n              }, domiciliario._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"menuMultij\",\n            sx: {\n              m: 1,\n              width: 395\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-multiple-chip-label\",\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-multiple-chip-label\",\n              id: \"demo-multiple-chip\",\n              multiple: true,\n              value: productName,\n              onChange: handleChange,\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                id: \"select-multiple-chip\",\n                label: \"Chip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 24\n              }, this),\n              renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.4\n                },\n                children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: value\n                }, value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this),\n              MenuProps: MenuProps,\n              children: product.map(prod => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: prod.nombre,\n                style: getStyles(prod.nombre, productName, theme),\n                children: prod.nombre\n              }, prod.nombre && prod._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"direccion\",\n              label: \"Direcci\\xF3n\",\n              type: \"text\",\n              id: \"direccion\",\n              autoComplete: \"direccion\",\n              ...direccion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: [\" \", \"Create Order\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [error && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n                #menuMultij {\n                  postiion: absolute;\n                  left: -0.4rem;\n                  top: 0.5rem;\n                }\n\n                #menuDomiciliario {\n                  postiion: absolute;\n                  left: -0.4rem;\n                  top: 0.5rem;\n                }\n                `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateOrder, \"u5Uaheb/O0W34DWnaWA3lUvY5VU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useTheme, useSelector, useSelector, useSelector, useFormInput, useFormInput, useFormInput, useFormInput, useStyles, useSelector];\n});\n\n_c = CreateOrder;\n\nconst useFormInput = initialValue => {\n  _s2();\n\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleProducts = e => {\n    setValue(e.map(e => e.target.value));\n  };\n\n  return {\n    value,\n    onChange: handleChange\n  };\n};\n\n_s2(useFormInput, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nexport default CreateOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/ui-component/addresses/orders/TakeOrder.jsx"],"names":["React","useState","useDispatch","useSelector","Counter","useEffect","push","api","Geocode","Avatar","Button","CssBaseline","TextField","Grid","Alert","LockOutlinedIcon","Typography","makeStyles","Container","useTheme","Box","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","createOrderAction","getAllDomiciliarioAction","getAllProductAction","getFromUserPositionAction","updatePositionAction","createPositionAction","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","productName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","CreateOrder","props","increment","onClickFunction","dispatch","position","state","ui","positionId","users","domiciliarios","domiciliarioList","setProductName","domiciliarioName","setDomiciliarioName","count","setCount","handleClick","incrementCount","handleChange","event","target","value","split","handleDomiciliarioChange","products","product","Array","from","user","login","usuario","error","errorCreateOrder","productos","useFormInput","direccion","orderName","remaining","domiciliario","classes","handleCreate","preventDefault","data","fecha","Date","now","cliente","id","_id","nombre","ContactProduct","address","coords","address_coords","console","log","setApiKey","setLanguage","setRegion","fromAddress","then","response","lat","lng","results","geometry","location","userID","timer","setInterval","options","enableHighAccuracy","timeout","maximumAge","success","pos","crd","latitude","longitude","JSON","stringify","err","warn","code","message","navigator","geolocation","getCurrentPosition","clearTimeout","amountProducts","counter","productoFinal","i","length","map","cantidad","m","selected","flexWrap","gap","prod","initialValue","setValue","e","handleProducts","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Counter } from '../counter/counter'\r\nimport { useEffect } from \"react\";\r\nimport { push } from \"redux-first-history\";\r\nimport { api } from \"../../../store/storeAddresses/store/middleware/api\";\r\nimport Geocode from \"react-geocode\";\r\n\r\n\r\n// Material UI\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Chip from '@mui/material/Chip';\r\n\r\n\r\n// Actions\r\nimport {\r\n  createOrderAction,  // Create order\r\n  getAllDomiciliarioAction, // Get Domiciliarios\r\n  getAllProductAction, // Get products\r\n\r\n  getFromUserPositionAction,  // Get Position\r\n  updatePositionAction, // Update position\r\n  createPositionAction, // Create position for one user, in this case we gonna save the delevery man locations\r\n} from \"../../../store/storeAddresses/store/reducer\";\r\n\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nfunction getStyles(name, productName, theme) {\r\n  return {\r\n    fontWeight:\r\n      productName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction CreateOrder({ props, increment, onClickFunction }) {\r\n\r\n  // Getting Real Time Location\r\n  const dispatch = useDispatch();\r\n  const position = useSelector((state) => state.ui.position);\r\n  const positionId = useSelector((state) => state.ui.positionId);\r\n  const users = useSelector((state) => state.ui.domiciliarios);\r\n  const domiciliarioList = [...users]\r\n  const domiciliarios = useSelector((state) => state.ui.domiciliarios)\r\n\r\n\r\n\r\n  const theme = useTheme(); // Styles\r\n  const [productName, setProductName] = React.useState([]);\r\n  const [domiciliarioName, setDomiciliarioName] = React.useState([])\r\n  const [count, setCount] = useState(0)\r\n\r\n\r\n  // Handlers\r\n  const handleClick = () => {\r\n    onClickFunction(increment)\r\n  }\r\n\r\n  const incrementCount = increment => {\r\n    setCount(count + increment)\r\n  }\r\n\r\n  // Handle get Name of the product\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setProductName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    )\r\n  }\r\n\r\n  // Hanlde Domiciliario State\r\n  const handleDomiciliarioChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setDomiciliarioName(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === 'string' ? value.split(',') : value,\r\n    )\r\n  }\r\n\r\n\r\n  // Generate a random domiciliario for to save the order\r\n  //let randomDomiciliario = domiciliario[Math.floor(Math.random() * domiciliario.length)];\r\n\r\n\r\n  // Get products from the global state\r\n  const products = useSelector((state) => state.ui.products)\r\n\r\n  // Transform the object products in one Array for most easilier manipulation\r\n  const product = Array.from(products)\r\n\r\n  // Get current user from the global state\r\n  const user = useSelector((state) => state.login.usuario.user)\r\n\r\n  // Get errors that will happends\r\n  const error = useSelector((state) => state.login.errorCreateOrder);\r\n\r\n  // Fields por send the query to the API\r\n  const productos = useFormInput(\"Selector\");\r\n  const direccion = useFormInput(\"\");\r\n  const orderName = useFormInput(\"\");\r\n  const remaining = 180000 // Time remaining since the order was created.\r\n  const domiciliario = useFormInput(\"\")\r\n  const classes = useStyles();\r\n\r\n  // Hanlde that send information to the API and then these datas will save into the database\r\n  const handleCreate = (event) => {\r\n    event.preventDefault();\r\n    let data = {\r\n      orderName: orderName.value,\r\n      fecha: Date.now(),\r\n      cliente: {\r\n        id: user._id,\r\n        name: user.nombre,\r\n        //location: clientLocation,\r\n      },\r\n      domiciliario: {\r\n        id: domiciliarioName[0],\r\n      },\r\n      productos: ContactProduct(), // Function that contents Name of the product, amount of products and their own ID\r\n      //direccion: direccion.value,\r\n      direccion: {\r\n\taddress: direccion.value,\r\n\tcoords: address_coords,\r\n      },\r\n      remaining\r\n    };\r\n    dispatch(createOrderAction(data));\r\n    dispatch(push(\"/orderlist\"));\r\n    console.log('ORDER CREATED', data)\r\n  };\r\n\r\n\r\n   // Geocoding handle for convert one address as coords\r\n\t\r\n   // set Google Maps API Key\r\nGeocode.setApiKey(\"AIzaSyC3fhmeqzhFIthXezrymC_owJgFgH_yWgA\");\r\n\r\n// set response language. Defaults to english.\r\nGeocode.setLanguage(\"es\");\r\n\r\n// set response region. Its optional.\r\n// A Geocoding request with region=es (Spain) will return the Spanish city.\r\nGeocode.setRegion(\"co\");\r\n\r\nconst address = direccion.value\r\nlet address_coords\r\n\r\nGeocode.fromAddress(address).then(\r\n  (response) => {\r\n    const { lat, lng } = response.results[0].geometry.location;\r\n    address_coords = { lat, lng }\r\n    console.log(address_coords);\r\n  },\r\n  (error) => {\r\n    console.error(error);\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\n  // Excecute actions\r\n\r\n  // Get all user's rol 'domiciliario'\r\n  React.useEffect(() => {\r\n    dispatch(getAllDomiciliarioAction());\r\n  }, [dispatch]);\r\n\r\n\r\n  // Get Products Array\r\n  React.useEffect(() => {\r\n    dispatch(getAllProductAction());\r\n  }, [dispatch]);\r\n\r\n\r\n\r\n  const userID = domiciliarioName[0]\r\n  \r\n  // Create / Update position\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      dispatch(getFromUserPositionAction(userID));\r\n      const options = {\r\n        enableHighAccuracy: true,\r\n        timeout: 5000,\r\n        maximumAge: 0\r\n      };\r\n      dispatch(getAllDomiciliarioAction());\r\n\r\n      function success(pos) {\r\n        var crd = pos.coords;\r\n        if (positionId) {\r\n          dispatch(updatePositionAction({ lat: crd.latitude, lng: crd.longitude, positionId: positionId }));\r\n        } else {\r\n          dispatch(createPositionAction({ position: JSON.stringify({ lat: crd.latitude, lng: crd.longitude }), usuario: userID }));\r\n        }\r\n      };\r\n\r\n      function error(err) {\r\n        console.warn('ERROR(' + err.code + '): ' + err.message);\r\n      };\r\n\r\n      navigator.geolocation.getCurrentPosition(success, error, options);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [dispatch, position, positionId, userID]);\r\n\r\n\r\n  // Counter for give the amount of the products\r\n  const amountProducts = useSelector((state) => state.counter.value)\r\n\r\n\r\n  // Function that contents Name of the product, amount of products and their own ID\r\n  const ContactProduct = () => {\r\n\r\n    let productoFinal, id, nombre;\r\n\r\n    for (let i = 0; i < productName.length; i++) {\r\n      nombre = productName[i]\r\n    }\r\n\r\n    for (let i = 0; i < product.length; i++) {\r\n      if (product[i].nombre === nombre) {\r\n        id = product[i]._id\r\n      }\r\n    }\r\n    return productoFinal = productName.map((product) => {\r\n      return {\r\n        nombre: product,\r\n        id: id,\r\n        cantidad: amountProducts\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar} />\r\n          <LockOutlinedIcon />\r\n          <Typography component=\"h1\" variant=\"h5\" /> Take Order{\" \"}\r\n          <form\r\n            className={classes.form}\r\n            autoComplete=\"off\"\r\n            onSubmit={handleCreate}\r\n          >\r\n\r\n            <Grid container spacing={2}>\r\n\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  autoComplete=\"orderName\"\r\n                  name=\"orderName\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"orderName\"\r\n                  label=\"Nombre de la orden\"\r\n                  autoFocus\r\n                  {...orderName}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            <FormControl id=\"menuDomiciliario\" sx={{ m: 1, width: 395 }}>\r\n              <InputLabel id=\"demo-multiple-name-label\">Domiciliario</InputLabel>\r\n              <Select\r\n                labelId=\"demo-multiple-name-label\"\r\n                id=\"demo-multiple-name\"\r\n                multiple\r\n                value={domiciliarioName}\r\n                onChange={handleDomiciliarioChange}\r\n                input={<OutlinedInput label=\"Domiciliario\" />}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {domiciliarios.map((domiciliario) => (\r\n                  <MenuItem\r\n                    key={domiciliario._id}\r\n                    value={domiciliario._id}\r\n                  //style={getStyles(domiciliario, domiciliarioName, theme)}\r\n                  >\r\n                    {domiciliario.nombre}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n\r\n\r\n\r\n            <FormControl id=\"menuMultij\" sx={{ m: 1, width: 395 }}>\r\n              <InputLabel id=\"demo-multiple-chip-label\">Products</InputLabel>\r\n              <Select\r\n                labelId=\"demo-multiple-chip-label\"\r\n                id=\"demo-multiple-chip\"\r\n                multiple\r\n                value={productName}\r\n                onChange={handleChange}\r\n                input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\r\n                renderValue={(selected) => (\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.4 }}>\r\n                    {selected.map((value) => (\r\n                      <Chip key={value} label={value} />\r\n                    ))}\r\n                  </Box>\r\n                )}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {product.map((prod) => (\r\n                  <MenuItem\r\n                    key={prod.nombre && prod._id}\r\n                    value={prod.nombre}\r\n                    style={getStyles(prod.nombre, productName, theme)}\r\n\r\n                  >\r\n                    {prod.nombre}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <Counter />\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"direccion\"\r\n                label=\"Dirección\"\r\n                type=\"text\"\r\n                id=\"direccion\"\r\n                autoComplete=\"direccion\"\r\n                {...direccion}\r\n              />\r\n            </Grid>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              {\" \"}\r\n              Create Order{\" \"}\r\n            </Button>\r\n            <Grid item>\r\n              {error && (\r\n                <>\r\n                  <Alert severity=\"error\">{error}</Alert>\r\n                  <br />\r\n                </>\r\n              )}\r\n              <br />\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n      <style jsx>{`\r\n                #menuMultij {\r\n                  postiion: absolute;\r\n                  left: -0.4rem;\r\n                  top: 0.5rem;\r\n                }\r\n\r\n                #menuDomiciliario {\r\n                  postiion: absolute;\r\n                  left: -0.4rem;\r\n                  top: 0.5rem;\r\n                }\r\n                `}</style>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst useFormInput = (initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleProducts = (e) => {\r\n    setValue(e.map((e) => e.target.value))\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange,\r\n  };\r\n};\r\n\r\nexport default CreateOrder;\r\n"]},"metadata":{},"sourceType":"module"}