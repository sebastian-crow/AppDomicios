{"ast":null,"code":"import axios from \"axios\";\nimport { CANCEL } from \"redux-saga\";\n\nrequire(\"dotenv\").config();\n\nlet client;\nexport const getSessionToken = () => {\n  const uiStore = sessionStorage.getItem(\"store\");\n  var ui = JSON.parse(uiStore);\n  if (ui) return ui.login.usuario.token;else return null;\n}; // axios client factory ...\n// useful in case we want to setup custom interceptors for e.g. regular token refresh etc...\n\nfunction getClient() {\n  if (!client) {\n    client = axios.create({\n      baseURL: process.env.REACT_APP_BACK_END || \"http://localhost:3006\"\n    });\n  }\n\n  return client;\n} // helper method to invoke ajax call via axios, and set up a cancel token to cancel\n// pending requests if needed.\n\n\nconst callAPI = options => {\n  const token = getSessionToken(); // returns a cancelable promise\n\n  const cancel = axios.CancelToken.source();\n  const opts = { ...options,\n    cancelToken: cancel.token\n  };\n\n  if (token) {\n    opts.headers = {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \" + token\n    };\n  } else {\n    opts.headers = {\n      Accept: \"application/json\"\n    };\n  }\n\n  const promise = getClient().request(opts);\n  promise[CANCEL] = cancel.cancel;\n  return promise;\n};\n\nexport function login(params) {\n  return callAPI({\n    method: \"POST\",\n    url: `/users/authenticate`,\n    data: params\n  });\n}\nexport function register(params) {\n  return callAPI({\n    method: \"POST\",\n    url: `/users/register`,\n    data: params\n  });\n}\nexport function editarUsuario(params) {\n  return callAPI({\n    method: \"PUT\",\n    url: `/users/update/` + params.id,\n    data: params.data\n  });\n}\nexport function createPosition(params) {\n  return callAPI({\n    method: \"POST\",\n    url: `/position`,\n    data: params\n  });\n}\nexport function getPositionFromUser(id) {\n  return callAPI({\n    method: \"GET\",\n    url: `/position/user/${id}`\n  });\n}\nexport function updatePosition(params) {\n  return callAPI({\n    method: \"PUT\",\n    url: `/position/${params.positionId}`,\n    data: {\n      position: JSON.stringify({\n        lat: params.lat,\n        lng: params.lng\n      })\n    }\n  });\n}\nexport function getAllUsers() {\n  return callAPI({\n    method: \"GET\",\n    url: `/users`\n  });\n}\nexport function getAllClients() {\n  return callAPI({\n    method: \"GET\",\n    url: `/users/clients`\n  });\n}\nexport function getAllDomiciliarios() {\n  return callAPI({\n    method: \"GET\",\n    url: `/users/domiciliarios`\n  });\n} // Products\n\nexport function getAllProducts() {\n  return callAPI({\n    method: \"GET\",\n    url: `/products`\n  });\n}\nexport function createProduct(params) {\n  return callAPI({\n    method: \"POST\",\n    url: `/products/create`,\n    data: params\n  });\n}\nexport function updateProduct(params) {\n  return callAPI({\n    method: \"PUT\",\n    url: `/products/update/` + params.id,\n    data: params.data\n  });\n}\nexport function deleteProduct(params) {\n  return callAPI({\n    method: \"DELETE\",\n    url: `/products/delete/` + params.id,\n    data: params.data\n  });\n} // Orders\n\nexport function getAllOrders() {\n  return callAPI({\n    method: \"GET\",\n    url: `/orders`\n  });\n}\nexport function createOrder(params) {\n  return callAPI({\n    method: \"POST\",\n    url: `/orders/create`,\n    data: params\n  });\n}\nexport function updateOrder(params) {\n  return callAPI({\n    method: \"PUT\",\n    url: `/orders/update/` + params.id,\n    data: params.data\n  });\n}\nexport function deleteOrder(params) {\n  return callAPI({\n    method: \"DELETE\",\n    url: `/orders/delete/` + params.id,\n    data: params.data\n  });\n}","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/addresses_app/src/store/storeAddresses/store/middleware/api/api.js"],"names":["axios","CANCEL","require","config","client","getSessionToken","uiStore","sessionStorage","getItem","ui","JSON","parse","login","usuario","token","getClient","create","baseURL","process","env","REACT_APP_BACK_END","callAPI","options","cancel","CancelToken","source","opts","cancelToken","headers","Accept","Authorization","promise","request","params","method","url","data","register","editarUsuario","id","createPosition","getPositionFromUser","updatePosition","positionId","position","stringify","lat","lng","getAllUsers","getAllClients","getAllDomiciliarios","getAllProducts","createProduct","updateProduct","deleteProduct","getAllOrders","createOrder","updateOrder","deleteOrder"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { CANCEL } from \"redux-saga\";\r\nrequire(\"dotenv\").config();\r\nlet client;\r\n\r\nexport const getSessionToken = () => {\r\n  const uiStore = sessionStorage.getItem(\"store\");\r\n  var ui = JSON.parse(uiStore);\r\n  if (ui) return ui.login.usuario.token;\r\n  else return null;\r\n};\r\n// axios client factory ...\r\n// useful in case we want to setup custom interceptors for e.g. regular token refresh etc...\r\nfunction getClient() {\r\n  if (!client) {\r\n    client = axios.create({\r\n      baseURL: process.env.REACT_APP_BACK_END || \"http://localhost:3006\",\r\n    });\r\n  }\r\n  return client;\r\n}\r\n\r\n\r\n// helper method to invoke ajax call via axios, and set up a cancel token to cancel\r\n// pending requests if needed.\r\nconst callAPI = (options) => {\r\n  const token = getSessionToken();\r\n  // returns a cancelable promise\r\n  const cancel = axios.CancelToken.source();\r\n  const opts = {\r\n    ...options,\r\n    cancelToken: cancel.token,\r\n  };\r\n  if (token) {\r\n    opts.headers = {\r\n      Accept: \"application/json\",\r\n      Authorization: \"Bearer \" + token,\r\n    };\r\n  } else {\r\n    opts.headers = {\r\n      Accept: \"application/json\",\r\n    };\r\n  }\r\n\r\n  const promise = getClient().request(opts);\r\n  promise[CANCEL] = cancel.cancel;\r\n  return promise;\r\n};\r\n\r\nexport function login(params) {\r\n  return callAPI({\r\n    method: \"POST\",\r\n    url: `/users/authenticate`,\r\n    data: params,\r\n  });\r\n}\r\n\r\nexport function register(params) {\r\n  return callAPI({\r\n    method: \"POST\",\r\n    url: `/users/register`,\r\n    data: params,\r\n  });\r\n}\r\n\r\nexport function editarUsuario(params) {\r\n  return callAPI({\r\n    method: \"PUT\",\r\n    url: `/users/update/` + params.id,\r\n    data: params.data,\r\n  });\r\n}\r\n\r\nexport function createPosition(params) {\r\n  return callAPI({\r\n    method: \"POST\",\r\n    url: `/position`,\r\n    data: params,\r\n  });\r\n}\r\n\r\nexport function getPositionFromUser(id) {\r\n  return callAPI({\r\n    method: \"GET\",\r\n    url: `/position/user/${id}`,\r\n  });\r\n}\r\n\r\nexport function updatePosition(params) {\r\n  return callAPI({\r\n    method: \"PUT\",\r\n    url: `/position/${params.positionId}`,\r\n    data: { position: JSON.stringify({ lat: params.lat, lng: params.lng }) },\r\n  });\r\n}\r\n\r\nexport function getAllUsers() {\r\n  return callAPI({\r\n    method: \"GET\",\r\n    url: `/users`,\r\n  });\r\n}\r\n\r\n\r\nexport function getAllClients() {\r\n  return callAPI({\r\n    method: \"GET\",\r\n    url: `/users/clients`\r\n  })\r\n}\r\n\r\nexport function getAllDomiciliarios() {\r\n  return callAPI({\r\n    method: \"GET\",\r\n    url: `/users/domiciliarios`\r\n  })\r\n}\r\n\r\n\r\n\r\n// Products\r\n\r\nexport function getAllProducts() {\r\n  return callAPI({\r\n    method: \"GET\",\r\n    url: `/products`,\r\n  });\r\n}\r\n\r\n\r\nexport function createProduct(params) {\r\n  return callAPI({\r\n    method: \"POST\",\r\n    url: `/products/create`,\r\n    data: params,\r\n  });\r\n}\r\n\r\n\r\nexport function updateProduct(params) {\r\n  return callAPI({\r\n    method: \"PUT\",\r\n    url: `/products/update/` + params.id,\r\n    data: params.data,\r\n  });\r\n}\r\n\r\nexport function deleteProduct(params) {\r\n  return callAPI({\r\n    method: \"DELETE\",\r\n    url: `/products/delete/` + params.id,\r\n    data: params.data,\r\n  });\r\n}\r\n\r\n\r\n// Orders\r\n\r\nexport function getAllOrders() {\r\n  return callAPI({\r\n    method: \"GET\",\r\n    url: `/orders`,\r\n  });\r\n}\r\n\r\n\r\nexport function createOrder(params) {\r\n  return callAPI({\r\n    method: \"POST\",\r\n    url: `/orders/create`,\r\n    data: params,\r\n  });\r\n}\r\n\r\n\r\nexport function updateOrder(params) {\r\n  return callAPI({\r\n    method: \"PUT\",\r\n    url: `/orders/update/` + params.id,\r\n    data: params.data,\r\n  });\r\n}\r\n\r\nexport function deleteOrder(params) {\r\n  return callAPI({\r\n    method: \"DELETE\",\r\n    url: `/orders/delete/` + params.id,\r\n    data: params.data,\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}