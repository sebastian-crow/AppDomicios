{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/addresses_app/src/views/dashboard/Default/TotalGrowthBarChart.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react'; // material-ui\n\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core'; // third-party\n\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts'; // project imports\n\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant'; // chart data\n\nimport chartData from './chart-data/total-growth-bar-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst status = [{\n  value: 'today',\n  label: 'Today'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'year',\n  label: 'This Year'\n}]; // ===========================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||=========================== //\n\nconst TotalGrowthBarChart = ({\n  isLoading\n}) => {\n  _s();\n\n  const [value, setValue] = React.useState('today');\n  const theme = useTheme();\n  const {\n    primary\n  } = theme.palette.text;\n  const grey200 = theme.palette.grey[200];\n  const primary200 = theme.palette.primary[200];\n  const primaryDark = theme.palette.primary.dark;\n  const secondaryMain = theme.palette.secondary.main;\n  const secondaryLight = theme.palette.secondary.light;\n  const grey500 = theme.palette.grey[500];\n  React.useEffect(() => {\n    const newChartData = { ...chartData.options,\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: grey200\n      },\n      tooltip: {\n        theme: 'light'\n      },\n      legend: {\n        labels: {\n          colors: grey500\n        }\n      }\n    }; // do not load chart when loading\n\n    if (!isLoading) {\n      ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n    }\n  }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalGrowthBarChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MainCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: \"Total Growth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h3\",\n                    children: \"$2,324.00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"standard-select-currency\",\n                select: true,\n                value: value,\n                onChange: e => setValue(e.target.value),\n                children: status.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Chart, { ...chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(TotalGrowthBarChart, \"ttOIex4sil4J1EOvRlvP8wugBZA=\", false, function () {\n  return [useTheme];\n});\n\n_c = TotalGrowthBarChart;\nTotalGrowthBarChart.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalGrowthBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalGrowthBarChart\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/addresses_app/src/views/dashboard/Default/TotalGrowthBarChart.js"],"names":["PropTypes","React","Grid","MenuItem","TextField","Typography","useTheme","ApexCharts","Chart","SkeletonTotalGrowthBarChart","MainCard","gridSpacing","chartData","status","value","label","TotalGrowthBarChart","isLoading","setValue","useState","theme","primary","palette","text","grey200","grey","primary200","primaryDark","dark","secondaryMain","secondary","main","secondaryLight","light","grey500","useEffect","newChartData","options","colors","xaxis","labels","style","yaxis","grid","borderColor","tooltip","legend","exec","e","target","map","option","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n// ===========================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||=========================== //\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n    const [value, setValue] = React.useState('today');\n    const theme = useTheme();\n\n    const { primary } = theme.palette.text;\n    const grey200 = theme.palette.grey[200];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n    const grey500 = theme.palette.grey[500];\n\n    React.useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n\n    return (\n        <>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </>\n    );\n};\n\nTotalGrowthBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n"]},"metadata":{},"sourceType":"module"}