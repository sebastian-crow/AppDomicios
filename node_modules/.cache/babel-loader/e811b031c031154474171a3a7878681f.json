{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/ui-component/addresses/orders/EditOrder.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/styles';\nimport Container from \"@material-ui/core/Container\";\nimport { Select, MenuItem, InputLabel } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { push } from \"redux-first-history\";\nimport moment from \"moment\";\nimport { getAllProductAction, getAllDomiciliarioAction, updateOrderAction } from '../../../store/storeAddresses/store/reducer';\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport FormControl from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { useTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, productName, theme) {\n  return {\n    fontWeight: productName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nfunction EditOrder() {\n  _s();\n\n  const theme = useTheme();\n  const results = useSelector(state => state.router.location);\n  const orders = useSelector(state => state.ui.orders);\n  const order = [...orders];\n  const [productName, setProductName] = React.useState([]);\n  const [domiciliarioName, setDomiciName] = React.useState([]);\n  const products = useSelector(state => state.ui.products);\n\n  const handleProductChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setProductName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const handleDomiciliarioChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setDomiciName( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  }; // Get id by split the current URL\n\n\n  let paths = window.location.pathname.split('/');\n  let id = paths[paths.length - 1]; // Fuction for take all information abot this Ordee\n\n  const FoundOrder = () => {\n    let orden = [];\n\n    for (let i = 0; i < orders.length; i++) {\n      if (orders[i]._id === id) {\n        orden.push(orders[i]);\n      }\n    }\n\n    return orden;\n  };\n\n  console.log('ORDERS', orders); // Transform the object products in one Array for most easilier manipulation\n\n  const product = Array.from(products); // Counter for give the amount of the products\n\n  const amountProducts = useSelector(state => state.counter.value); // Function that contents Name of the product, amount of products and their own ID\n\n  const ContactProduct = () => {\n    let productoFinal, id, nombre;\n\n    for (let i = 0; i < productName.length; i++) {\n      nombre = productName[i];\n    }\n\n    for (let i = 0; i < product.length; i++) {\n      if (product[i].nombre === nombre) {\n        id = product[i]._id;\n      }\n    }\n\n    return productoFinal = productName.map(product => {\n      return {\n        nombre: product,\n        id: id,\n        cantidad: amountProducts\n      };\n    });\n  };\n\n  const orden = FoundOrder();\n  console.log('Found Orden', orden);\n  const orderF = orden[0];\n  console.log('ORDERF', orderF);\n  let domici_id;\n\n  if (orderF.domiciliario.id.length > 1) {\n    domici_id = orderF.domiciliario.id;\n    console.log('Domiciliario field in this order have mora than 1 item');\n  } else {\n    domici_id = orderF.domiciliario.id[0];\n    console.log('Domiciliario field only have one item');\n  } //console.log('Domici_Id', domici_id)\n\n\n  const domiciliarios = useSelector(state => state.ui.domiciliarios);\n  const domiciCopy = [...domiciliarios];\n  console.log('domici_id', domici_id);\n  const user = useSelector(state => state.login.usuario.user);\n  const users = useSelector(state => state.ui.domiciliarios);\n  console.log('Users that give to the state', users); //let domici\n  //let nameDomici = domici.nombre\n\n  const domici = users.map(user => {\n    if (user._id === domici_id) return user;\n  });\n\n  const domi1 = () => {\n    let idfinal;\n\n    for (let i = 0; i < users.length; i++) {\n      if (users[i]._id === domici_id) {\n        idfinal = users[i];\n      }\n    }\n\n    return idfinal;\n  };\n\n  console.log('domi1', domi1());\n  const mydomiciliario = domi1();\n  console.log('Mydomiciliario', mydomiciliario); //console.log('orderF', orderF)\n\n  const fecha = new Date();\n  console.log('End log', orderF);\n  const orderName = useFormInput(orderF.orderName);\n  const cliente = { ...user\n  };\n  const domiciliario = useFormInput(mydomiciliario.nombre);\n  const productos = ContactProduct();\n  const direccion = useFormInput(orderF.direccion);\n  const [error, setError] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleUpdate = event => {\n    event.preventDefault();\n    setError(null);\n    let data = {\n      orderName: orderName.value,\n      fecha: fecha,\n      cliente: {\n        id: cliente._id,\n        name: cliente.nombre //location: clientLocation,\n\n      },\n      domiciliario: {\n        id: mydomiciliario._id,\n        name: domiciliario.value\n      },\n      productos,\n      direccion: direccion.value\n    };\n    dispatch(updateOrderAction({\n      data,\n      id: orderF._id\n    }));\n    dispatch(push(\"/orderlist\"));\n  }; // Get Products Array\n\n\n  React.useEffect(() => {\n    dispatch(getAllProductAction());\n  }, [dispatch]);\n  React.useEffect(() => {\n    dispatch(getAllDomiciliarioAction());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), \" Edit Order\", \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          autoComplete: \"off\",\n          onSubmit: handleUpdate,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"orderName\",\n                variant: \"outlined\",\n                fullWidth: true,\n                id: \"orderName\",\n                label: \"OrderName\",\n                autoFocus: true,\n                defaultValue: orderName,\n                ...orderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"menuDomiciliario\",\n              sx: {\n                m: 1,\n                width: 395\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-multiple-name-label\",\n                children: \"Domiciliario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-multiple-name-label\",\n                id: \"demo-multiple-name\",\n                multiple: true,\n                value: domiciliarioName,\n                onChange: handleDomiciliarioChange,\n                input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  label: \"Domiciliario\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 44\n                }, this),\n                MenuProps: MenuProps,\n                children: domiciCopy.map(domiciliario => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: domiciliario._id //style={getStyles(domiciliario, domiciliarioName, theme)}\n                  ,\n                  children: domiciliario.nombre\n                }, domiciliario._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              id: \"menuMultij\",\n              sx: {\n                m: 1,\n                width: 395\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-multiple-chip-label\",\n                children: \"Products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-multiple-chip-label\",\n                id: \"demo-multiple-chip\",\n                multiple: true,\n                value: productName,\n                onChange: handleProductChange,\n                input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  id: \"select-multiple-chip\",\n                  label: \"Chip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 44\n                }, this),\n                renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 0.4\n                  },\n                  children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: value\n                  }, value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 41\n                }, this),\n                MenuProps: MenuProps,\n                children: product.map(prod => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: prod.nombre,\n                  style: getStyles(prod.nombre, productName, theme),\n                  children: prod.nombre\n                }, prod.nombre && prod._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                fullWidth: true,\n                id: \"direccion\",\n                label: \"direccion\",\n                name: \"direccion\",\n                defaultValue: order.direccion,\n                ...direccion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: [\" \", \"Edit\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [error && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"error\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n                    #menuMultij {\n                        postiion: absolute;\n                        left: 0.5rem;\n                        top: 0rem;\n                    }\n            \n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditOrder, \"AtziG8Jg3sFCsNGu3hWJpisjNXE=\", false, function () {\n  return [useTheme, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useFormInput, useFormInput, useFormInput, useStyles, useDispatch];\n});\n\n_c = EditOrder;\n\nconst useFormInput = initialValue => {\n  _s2();\n\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    onChange: handleChange\n  };\n};\n\n_s2(useFormInput, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nexport default EditOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditOrder\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/ui-component/addresses/orders/EditOrder.jsx"],"names":["React","useState","useDispatch","Avatar","Button","CssBaseline","TextField","Grid","Alert","LockOutlinedIcon","Typography","makeStyles","Container","Select","MenuItem","InputLabel","useSelector","push","moment","getAllProductAction","getAllDomiciliarioAction","updateOrderAction","Box","Chip","FormControl","OutlinedInput","useTheme","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","getStyles","name","productName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","EditOrder","results","state","router","location","orders","ui","order","setProductName","domiciliarioName","setDomiciName","products","handleProductChange","event","target","value","split","handleDomiciliarioChange","paths","window","pathname","id","length","FoundOrder","orden","i","_id","console","log","product","Array","from","amountProducts","counter","ContactProduct","productoFinal","nombre","map","cantidad","orderF","domici_id","domiciliario","domiciliarios","domiciCopy","user","login","usuario","users","domici","domi1","idfinal","mydomiciliario","fecha","Date","orderName","useFormInput","cliente","productos","direccion","error","setError","classes","dispatch","handleUpdate","preventDefault","data","useEffect","m","selected","flexWrap","gap","prod","initialValue","setValue","handleChange","e","onChange"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from '@material-ui/styles';\nimport Container from \"@material-ui/core/Container\";\nimport { Select, MenuItem, InputLabel } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { push } from \"redux-first-history\";\nimport moment from \"moment\";\nimport { getAllProductAction, getAllDomiciliarioAction, updateOrderAction} from '../../../store/storeAddresses/store/reducer'\n\n\nimport Box from '@mui/material/Box';\nimport Chip from '@mui/material/Chip';\nimport FormControl from '@mui/material/FormControl';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport { useTheme } from '@mui/material/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\n\nfunction getStyles(name, productName, theme) {\n    return {\n        fontWeight:\n            productName.indexOf(name) === -1\n                ? theme.typography.fontWeightRegular\n                : theme.typography.fontWeightMedium,\n    };\n}\n\n\n\n\nfunction EditOrder() {\n    const theme = useTheme();\n    const results = useSelector((state) => state.router.location)\n\n    const orders = useSelector((state) => state.ui.orders)\n    const order = [...orders]\n    const [productName, setProductName] = React.useState([])\n    const [domiciliarioName, setDomiciName] = React.useState([])\n\n    const products = useSelector((state) => state.ui.products)\n\n    const handleProductChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setProductName(\n            // On autofill we get a the stringified value.\n            typeof value === 'string' ? value.split(',') : value,\n        )\n    }\n\n    const handleDomiciliarioChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setDomiciName(\n            // On autofill we get a the stringified value.\n            typeof value === 'string' ? value.split(',') : value,\n        )\n    }\n\n\n\n\n\n    // Get id by split the current URL\n    let paths = window.location.pathname.split('/');\n    let id = paths[paths.length - 1];\n\n    // Fuction for take all information abot this Ordee\n    const FoundOrder = () => {\n        let orden = []\n        for (let i = 0; i < orders.length; i++) {\n            if (orders[i]._id === id) {\n                orden.push(orders[i])\n            }\n        }\n        return orden\n    }\n\n    console.log('ORDERS', orders)\n    // Transform the object products in one Array for most easilier manipulation\n    const product = Array.from(products)\n\n    // Counter for give the amount of the products\n    const amountProducts = useSelector((state) => state.counter.value)\n\n\n    // Function that contents Name of the product, amount of products and their own ID\n    const ContactProduct = () => {\n\n        let productoFinal, id, nombre;\n\n        for (let i = 0; i < productName.length; i++) {\n            nombre = productName[i]\n        }\n\n        for (let i = 0; i < product.length; i++) {\n            if (product[i].nombre === nombre) {\n                id = product[i]._id\n            }\n        }\n        return productoFinal = productName.map((product) => {\n            return {\n                nombre: product,\n                id: id,\n                cantidad: amountProducts\n            }\n        })\n    }\n\n\n    const orden = FoundOrder()\n    console.log('Found Orden', orden)\n    const orderF = orden[0]\n    console.log('ORDERF', orderF)\n    \n    let domici_id\n\n    if(orderF.domiciliario.id.length > 1) {\n        domici_id = orderF.domiciliario.id\n        console.log('Domiciliario field in this order have mora than 1 item')\n    } else {\n        domici_id = orderF.domiciliario.id[0]\n        console.log('Domiciliario field only have one item')\n    }\n\n    //console.log('Domici_Id', domici_id)\n    const domiciliarios = useSelector((state) => state.ui.domiciliarios)\n    const domiciCopy = [...domiciliarios]\n    console.log('domici_id', domici_id)\n\n\n   \n\n    const user = useSelector((state) => state.login.usuario.user)\n\n    const users = useSelector((state) => state.ui.domiciliarios)\n\n    console.log('Users that give to the state', users)\n\n    //let domici\n    //let nameDomici = domici.nombre\n    const domici = users.map((user) => {\n        if (user._id === domici_id) return user\n    })\n\n    const domi1 = () => {\n        let idfinal\n        for(let i = 0; i < users.length; i++) {\n            if(users[i]._id === domici_id) {\n                idfinal = users[i]\n            }\n        }\n        return idfinal\n    }\n    console.log('domi1', domi1())\n\n    const mydomiciliario = domi1()\n    \n\n\n    console.log('Mydomiciliario', mydomiciliario)\n\n\n\n    //console.log('orderF', orderF)\n    const fecha = new Date()\n\n    console.log('End log',orderF)\n\n    const orderName = useFormInput(orderF.orderName);\n    const cliente = {...user}\n    const domiciliario = useFormInput(mydomiciliario.nombre); \n    const productos = ContactProduct()\n    const direccion = useFormInput(orderF.direccion);\n    const [error, setError] = useState(null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const handleUpdate = (event) => {\n        event.preventDefault();\n        setError(null);\n        let data = {\n            orderName: orderName.value,\n            fecha: fecha,\n            cliente: {\n                id: cliente._id,\n                name: cliente.nombre,\n                //location: clientLocation,\n            },\n            domiciliario: {\n                id: mydomiciliario._id,\n                name: domiciliario.value,\n            },\n            productos,\n            direccion: direccion.value,\n        };\n        dispatch(updateOrderAction({ data, id: orderF._id }));\n        dispatch(push(\"/orderlist\"));\n    };\n\n      // Get Products Array\n      React.useEffect(() => {\n        dispatch(getAllProductAction());\n    }, [dispatch]);\n\n\n    React.useEffect(() => {\n        dispatch(getAllDomiciliarioAction());\n    }, [dispatch]);\n\n\n\n   \n\n    return (\n        <>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar} />\n                    <LockOutlinedIcon />\n                    <Typography component=\"h1\" variant=\"h5\" /> Edit Order{\" \"}\n                    <form\n                        className={classes.form}\n                        autoComplete=\"off\"\n                        onSubmit={handleUpdate}\n                    >\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    name=\"orderName\"\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"orderName\"\n                                    label=\"OrderName\"\n                                    autoFocus\n                                    defaultValue={orderName}\n                                    {...orderName}\n                                />\n                            </Grid>\n\n\n\n                            <FormControl id=\"menuDomiciliario\" sx={{ m: 1, width: 395 }}>\n                                <InputLabel id=\"demo-multiple-name-label\">Domiciliario</InputLabel>\n                                <Select\n                                    labelId=\"demo-multiple-name-label\"\n                                    id=\"demo-multiple-name\"\n                                    multiple\n                                    value={domiciliarioName}\n                                    onChange={handleDomiciliarioChange}\n                                    input={<OutlinedInput label=\"Domiciliario\" />}\n                                    MenuProps={MenuProps}\n                                >\n                                    {domiciCopy.map((domiciliario) => (\n                                        <MenuItem\n                                            key={domiciliario._id}\n                                            value={domiciliario._id}\n                                        //style={getStyles(domiciliario, domiciliarioName, theme)}\n                                        >\n                                            {domiciliario.nombre}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n\n                            <FormControl id=\"menuMultij\" sx={{ m: 1, width: 395 }}>\n                                <InputLabel id=\"demo-multiple-chip-label\">Products</InputLabel>\n                                <Select\n                                    labelId=\"demo-multiple-chip-label\"\n                                    id=\"demo-multiple-chip\"\n                                    multiple\n                                    value={productName}\n                                    onChange={handleProductChange}\n                                    input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n                                    renderValue={(selected) => (\n                                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.4 }}>\n                                            {selected.map((value) => (\n                                                <Chip key={value} label={value} />\n                                            ))}\n                                        </Box>\n                                    )}\n                                    MenuProps={MenuProps}\n                                >\n                                    {product.map((prod) => (\n                                        <MenuItem\n                                            key={prod.nombre && prod._id}\n                                            value={prod.nombre}\n                                            style={getStyles(prod.nombre, productName, theme)}\n\n                                        >\n                                            {prod.nombre}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    id=\"direccion\"\n                                    label=\"direccion\"\n                                    name=\"direccion\"\n                                    defaultValue={order.direccion}\n                                    {...direccion}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            {\" \"}\n                            Edit{\" \"}\n                        </Button>\n                        <Grid item>\n                            {error && (\n                                <>\n                                    <Alert severity=\"error\">{error}</Alert>\n                                    <br />\n                                </>\n                            )}\n                            <br />\n                        </Grid>\n                    </form>\n                </div>\n            </Container>\n\n            <style jsx>{`\n                    #menuMultij {\n                        postiion: absolute;\n                        left: 0.5rem;\n                        top: 0rem;\n                    }\n            \n            `}</style>\n        </>\n    );\n}\n\nconst useFormInput = (initialValue) => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    };\n    return {\n        value,\n        onChange: handleChange,\n    };\n};\n\nexport default EditOrder;\n"]},"metadata":{},"sourceType":"module"}