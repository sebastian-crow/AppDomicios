{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/addresses_app/src/ui-component/extended/AnimateButton.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react'; // third-party\n\nimport { motion, useCycle } from 'framer-motion'; // ===========================|| ANIMATION BUTTON ||=========================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimateButton = /*#__PURE__*/React.forwardRef(_c = _s(({\n  children,\n  type,\n  direction,\n  offset,\n  scale\n}, ref) => {\n  _s();\n\n  let offset1;\n  let offset2;\n\n  switch (direction) {\n    case 'up':\n    case 'left':\n      offset1 = offset;\n      offset2 = 0;\n      break;\n\n    case 'right':\n    case 'dow':\n    default:\n      offset1 = 0;\n      offset2 = offset;\n      break;\n  }\n\n  const [x, cycleX] = useCycle(offset1, offset2);\n  const [y, cycleY] = useCycle(offset1, offset2);\n\n  switch (type) {\n    case 'rotate':\n      return /*#__PURE__*/_jsxDEV(motion.div, {\n        ref: ref,\n        animate: {\n          rotate: 360\n        },\n        transition: {\n          repeat: Infinity,\n          repeatType: 'loop',\n          duration: 2,\n          repeatDelay: 0\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n\n    case 'slide':\n      if (direction === 'up' || direction === 'down') {\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          ref: ref,\n          animate: {\n            y\n          },\n          onHoverEnd: () => cycleY(),\n          onHoverStart: () => cycleY(),\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(motion.div, {\n        ref: ref,\n        animate: {\n          x\n        },\n        onHoverEnd: () => cycleX(),\n        onHoverStart: () => cycleX(),\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n\n    case 'scale':\n    default:\n      if (typeof scale === 'number') {\n        scale = {\n          hover: scale,\n          tap: scale\n        };\n      }\n\n      return /*#__PURE__*/_jsxDEV(motion.div, {\n        ref: ref,\n        whileHover: {\n          scale: scale.hover\n        },\n        whileTap: {\n          scale: scale.tap\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n  }\n}, \"99A/Pg3SE7DRlTWvIuO6X3SrQwY=\", false, function () {\n  return [useCycle, useCycle];\n}));\n_c2 = AnimateButton;\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  offset: PropTypes.number,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n  direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n  scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\nAnimateButton.defaultProps = {\n  type: 'scale',\n  offset: 10,\n  direction: 'right',\n  scale: {\n    hover: 1,\n    tap: 0.9\n  }\n};\nexport default AnimateButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AnimateButton$React.forwardRef\");\n$RefreshReg$(_c2, \"AnimateButton\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/addresses_app/src/ui-component/extended/AnimateButton.js"],"names":["PropTypes","React","motion","useCycle","AnimateButton","forwardRef","children","type","direction","offset","scale","ref","offset1","offset2","x","cycleX","y","cycleY","rotate","repeat","Infinity","repeatType","duration","repeatDelay","hover","tap","propTypes","node","number","oneOf","oneOfType","object","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\n// third-party\nimport { motion, useCycle } from 'framer-motion';\n\n// ===========================|| ANIMATION BUTTON ||=========================== //\n\nconst AnimateButton = React.forwardRef(({ children, type, direction, offset, scale }, ref) => {\n    let offset1;\n    let offset2;\n    switch (direction) {\n        case 'up':\n        case 'left':\n            offset1 = offset;\n            offset2 = 0;\n            break;\n        case 'right':\n        case 'dow':\n        default:\n            offset1 = 0;\n            offset2 = offset;\n            break;\n    }\n\n    const [x, cycleX] = useCycle(offset1, offset2);\n    const [y, cycleY] = useCycle(offset1, offset2);\n\n    switch (type) {\n        case 'rotate':\n            return (\n                <motion.div\n                    ref={ref}\n                    animate={{ rotate: 360 }}\n                    transition={{\n                        repeat: Infinity,\n                        repeatType: 'loop',\n                        duration: 2,\n                        repeatDelay: 0\n                    }}\n                >\n                    {children}\n                </motion.div>\n            );\n        case 'slide':\n            if (direction === 'up' || direction === 'down') {\n                return (\n                    <motion.div ref={ref} animate={{ y }} onHoverEnd={() => cycleY()} onHoverStart={() => cycleY()}>\n                        {children}\n                    </motion.div>\n                );\n            }\n            return (\n                <motion.div ref={ref} animate={{ x }} onHoverEnd={() => cycleX()} onHoverStart={() => cycleX()}>\n                    {children}\n                </motion.div>\n            );\n\n        case 'scale':\n        default:\n            if (typeof scale === 'number') {\n                scale = {\n                    hover: scale,\n                    tap: scale\n                };\n            }\n            return (\n                <motion.div ref={ref} whileHover={{ scale: scale.hover }} whileTap={{ scale: scale.tap }}>\n                    {children}\n                </motion.div>\n            );\n    }\n});\n\nAnimateButton.propTypes = {\n    children: PropTypes.node,\n    offset: PropTypes.number,\n    type: PropTypes.oneOf(['slide', 'scale', 'rotate']),\n    direction: PropTypes.oneOf(['up', 'down', 'left', 'right']),\n    scale: PropTypes.oneOfType([PropTypes.number, PropTypes.object])\n};\n\nAnimateButton.defaultProps = {\n    type: 'scale',\n    offset: 10,\n    direction: 'right',\n    scale: {\n        hover: 1,\n        tap: 0.9\n    }\n};\n\nexport default AnimateButton;\n"]},"metadata":{},"sourceType":"module"}