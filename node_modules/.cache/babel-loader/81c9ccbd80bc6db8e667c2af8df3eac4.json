{"ast":null,"code":"import { takeLatest, put, call, cancelled } from \"redux-saga/effects\";\nimport { api } from \"./api\";\nimport { loginAction, loginDoneAction, saveSessionStateAction, registerAction, registerDoneAction, errorRegistro, actualizarUsuarioAction, actualizarUsuarioDoneAction, updatePositionAction, updatePositionDoneAction, createPositionAction, createPositionDoneAction, getFromUserPositionAction, getFromUserPositionDoneAction, getAllUserAction, getAllUserDoneAction, // Products // eslint-disable-next-line\nerrorGetProducts, getAllProductAction, getAllProductDoneAction, createProductAction, createProductDoneAction, errorCreateProduct, updateProductAction, updateProductDoneAction, errorUpdateProduct, deleteProductAction, deleteProductDoneAction, errorDeleteProduct, // Orders\nerrorGetOrders, getAllOrderAction, getAllOrderDoneAction, createOrderAction, createOrderDoneAction, errorCreateOrder, updateOrderAction, updateOrderDoneAction, errorUpdateOrder, deleteOrderAction, deleteOrderDoneAction, errorDeleteOrder, // Clients\ngetAllClientAction, getAllClientDoneAction, getFromClientPositionAction, getFromClientPositionDoneAction, // Dealers\ngetAllDomiciliarioAction, getAllDomiciliarioDoneAction, getFromDomiciliarioPositionAction, getFromDomiciliarioPositionDoneAction, loginError } from \"../reducer\";\nimport { LOCATION_CHANGE } from \"redux-first-history\";\n\nfunction* loginSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.login, action.payload);\n\n    if (data.status === 200) {\n      yield put(loginDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* loginDoneSaga() {\n  try {\n    yield put(saveSessionStateAction());\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* registerSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.register, action.payload);\n\n    if (data.status === 200) {\n      yield put(registerDoneAction(data));\n    } else {\n      yield put(errorRegistro(data.status));\n    }\n  } catch (error) {\n    yield put(errorRegistro(\"Error inesperado\"));\n  } finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* locationChangeSaga() {\n  yield put(saveSessionStateAction());\n}\n\nfunction* actualizarUsuarioSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.editarUsuario, action.payload);\n    yield put(actualizarUsuarioDoneAction(data));\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // All users position\n\n\nfunction* createPositionSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.createPosition, action.payload);\n\n    if (data.status === 200) {\n      yield put(createPositionDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* updatePositionSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.updatePosition, action.payload);\n\n    if (data.status === 200) {\n      yield put(updatePositionDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* getFromUserPositionSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.getPositionFromUser, action.payload);\n\n    if (data.status === \"200\") {\n      yield put(getFromUserPositionDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // Domiciliarios position\n\n\nfunction* getFromDomiciliarioPositionSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.getPositionFromUser, action.payload);\n\n    if (data.status === \"200\") {\n      yield put(getFromDomiciliarioPositionDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // Clients position\n\n\nfunction* getFromClientPositionSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.getPositionFromUser, action.payload);\n\n    if (data.status === \"200\") {\n      yield put(getFromClientPositionDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // All users registred\n\n\nfunction* getAllUserSaga() {\n  try {\n    const {\n      data\n    } = yield call(api.getAllUsers);\n\n    if (data.status === \"200\") {\n      yield put(getAllUserDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // All clients registred\n\n\nfunction* getAllClientSaga() {\n  try {\n    const {\n      data\n    } = yield call(api.getAllClients);\n\n    if (data.status === \"200\") {\n      yield put(getAllClientDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // All dealers registred\n\n\nfunction* getAllDomiciliarioSaga() {\n  try {\n    const {\n      data\n    } = yield call(api.getAllDomiciliarios);\n\n    if (data.status === \"200\") {\n      yield put(getAllDomiciliarioDoneAction(data));\n    } else {\n      yield put(loginError(data.message));\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // Products\n\n\nfunction* getAllProductSaga() {\n  try {\n    const {\n      data\n    } = yield call(api.getAllProducts);\n\n    if (data.status === \"200\") {\n      yield put(getAllProductDoneAction(data));\n    } else {\n      console.log('No products');\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* createProductSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.createProduct, action.payload);\n\n    if (data.status === 200) {\n      yield put(createProductDoneAction(data));\n    } else {\n      yield put(errorCreateProduct(data.status));\n    }\n  } catch (error) {\n    yield put(errorCreateProduct(\"Error inesperado\"));\n  } finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* updateProductSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.updateProduct, action.payload);\n    yield put(updateProductDoneAction(data));\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* deleteProductSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.deleteProduct, action.payload);\n\n    if (data.status === 200) {\n      yield put(deleteProductDoneAction(data));\n    } else {\n      yield put(errorDeleteProduct(data.status));\n    }\n  } catch (error) {\n    yield put(errorDeleteProduct(\"Error inesperado\"));\n  } finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n} // Orders\n\n\nfunction* getAllOrderSaga() {\n  try {\n    const {\n      data\n    } = yield call(api.getAllOrders);\n\n    if (data.status === \"200\") {\n      yield put(getAllOrderDoneAction(data));\n    } else {\n      console.log('No products');\n    }\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* createOrderSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.createOrder, action.payload);\n\n    if (data.status === 200) {\n      yield put(createOrderDoneAction(data));\n    } else {\n      yield put(errorCreateOrder(data.status));\n    }\n  } catch (error) {\n    yield put(errorCreateOrder(\"Error inesperado\"));\n  } finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* updateOrderSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.updateOrder, action.payload);\n    yield put(updateOrderDoneAction(data));\n  } catch (error) {} finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nfunction* deleteOrderSaga(action) {\n  try {\n    const {\n      data\n    } = yield call(api.deleteOrder, action.payload);\n\n    if (data.status === 200) {\n      yield put(deleteOrderDoneAction(data));\n    } else {\n      yield put(errorDeleteOrder(data.status));\n    }\n  } catch (error) {\n    yield put(errorDeleteOrder(\"Error inesperado\"));\n  } finally {\n    if (yield cancelled()) {// Do nothing\n    }\n  }\n}\n\nexport function* rootSaga() {\n  yield takeLatest(loginAction.type, loginSaga);\n  yield takeLatest(loginDoneAction.type, loginDoneSaga);\n  yield takeLatest(actualizarUsuarioAction.type, actualizarUsuarioSaga);\n  yield takeLatest(registerAction.type, registerSaga);\n  yield takeLatest(createPositionAction.type, createPositionSaga);\n  yield takeLatest(updatePositionAction.type, updatePositionSaga);\n  yield takeLatest(getFromUserPositionAction.type, getFromUserPositionSaga);\n  yield takeLatest(LOCATION_CHANGE, locationChangeSaga); // Products\n\n  yield takeLatest(getAllProductAction.type, getAllProductSaga);\n  yield takeLatest(createProductAction.type, createProductSaga);\n  yield takeLatest(updateProductAction.type, updateProductSaga);\n  yield takeLatest(deleteProductAction.type, deleteProductSaga); // Users\n\n  yield takeLatest(getAllUserAction.type, getAllUserSaga);\n  yield takeLatest(getAllClientAction.type, getAllClientSaga);\n  yield takeLatest(getAllDomiciliarioAction.type, getAllDomiciliarioSaga); // Dealers location\n\n  yield takeLatest(getFromDomiciliarioPositionAction.type, getFromDomiciliarioPositionSaga);\n  yield takeLatest(getFromClientPositionAction.type, getFromClientPositionSaga); // Orders\n\n  yield takeLatest(getAllOrderAction.type, getAllOrderSaga);\n  yield takeLatest(createOrderAction.type, createOrderSaga);\n  yield takeLatest(updateOrderAction.type, updateOrderSaga);\n  yield takeLatest(deleteOrderAction.type, deleteOrderSaga);\n}","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/store/storeAddresses/store/middleware/saga.js"],"names":["takeLatest","put","call","cancelled","api","loginAction","loginDoneAction","saveSessionStateAction","registerAction","registerDoneAction","errorRegistro","actualizarUsuarioAction","actualizarUsuarioDoneAction","updatePositionAction","updatePositionDoneAction","createPositionAction","createPositionDoneAction","getFromUserPositionAction","getFromUserPositionDoneAction","getAllUserAction","getAllUserDoneAction","errorGetProducts","getAllProductAction","getAllProductDoneAction","createProductAction","createProductDoneAction","errorCreateProduct","updateProductAction","updateProductDoneAction","errorUpdateProduct","deleteProductAction","deleteProductDoneAction","errorDeleteProduct","errorGetOrders","getAllOrderAction","getAllOrderDoneAction","createOrderAction","createOrderDoneAction","errorCreateOrder","updateOrderAction","updateOrderDoneAction","errorUpdateOrder","deleteOrderAction","deleteOrderDoneAction","errorDeleteOrder","getAllClientAction","getAllClientDoneAction","getFromClientPositionAction","getFromClientPositionDoneAction","getAllDomiciliarioAction","getAllDomiciliarioDoneAction","getFromDomiciliarioPositionAction","getFromDomiciliarioPositionDoneAction","loginError","LOCATION_CHANGE","loginSaga","action","data","login","payload","status","message","error","loginDoneSaga","registerSaga","register","locationChangeSaga","actualizarUsuarioSaga","editarUsuario","createPositionSaga","createPosition","updatePositionSaga","updatePosition","getFromUserPositionSaga","getPositionFromUser","getFromDomiciliarioPositionSaga","getFromClientPositionSaga","getAllUserSaga","getAllUsers","getAllClientSaga","getAllClients","getAllDomiciliarioSaga","getAllDomiciliarios","getAllProductSaga","getAllProducts","console","log","createProductSaga","createProduct","updateProductSaga","updateProduct","deleteProductSaga","deleteProduct","getAllOrderSaga","getAllOrders","createOrderSaga","createOrder","updateOrderSaga","updateOrder","deleteOrderSaga","deleteOrder","rootSaga","type"],"mappings":"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","sourcesContent":["import { takeLatest, put, call, cancelled } from \"redux-saga/effects\";\r\n\r\nimport { api } from \"./api\";\r\nimport {\r\n  loginAction,\r\n  loginDoneAction,\r\n  saveSessionStateAction,\r\n  registerAction,\r\n  registerDoneAction,\r\n  errorRegistro,\r\n  actualizarUsuarioAction,\r\n  actualizarUsuarioDoneAction,\r\n  updatePositionAction,\r\n  updatePositionDoneAction,\r\n  createPositionAction,\r\n  createPositionDoneAction,\r\n  getFromUserPositionAction,\r\n  getFromUserPositionDoneAction,\r\n  getAllUserAction,\r\n  getAllUserDoneAction,\r\n\r\n  // Products // eslint-disable-next-line\r\n  errorGetProducts, \r\n  getAllProductAction,\r\n  getAllProductDoneAction,\r\n  createProductAction,\r\n  createProductDoneAction,\r\n  errorCreateProduct,\r\n  updateProductAction,\r\n  updateProductDoneAction,\r\n  errorUpdateProduct,\r\n  deleteProductAction,\r\n  deleteProductDoneAction,\r\n  errorDeleteProduct,\r\n\r\n\r\n  // Orders\r\n  errorGetOrders,\r\n  getAllOrderAction,\r\n  getAllOrderDoneAction,\r\n  createOrderAction,\r\n  createOrderDoneAction,\r\n  errorCreateOrder,\r\n  updateOrderAction,\r\n  updateOrderDoneAction,\r\n  errorUpdateOrder,\r\n  deleteOrderAction,\r\n  deleteOrderDoneAction,\r\n  errorDeleteOrder,\r\n\r\n\r\n  // Clients\r\n  getAllClientAction,\r\n  getAllClientDoneAction,\r\n  getFromClientPositionAction,\r\n  getFromClientPositionDoneAction,\r\n\r\n  // Dealers\r\n  getAllDomiciliarioAction,\r\n  getAllDomiciliarioDoneAction,\r\n  getFromDomiciliarioPositionAction,\r\n  getFromDomiciliarioPositionDoneAction,\r\n\r\n  loginError,\r\n} from \"../reducer\";\r\nimport { LOCATION_CHANGE } from \"redux-first-history\";\r\n\r\nfunction* loginSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.login, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(loginDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* loginDoneSaga() {\r\n  try {\r\n    yield put(saveSessionStateAction());\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* registerSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.register, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(registerDoneAction(data));\r\n    } else {\r\n      yield put(errorRegistro(data.status));\r\n    }\r\n  } catch (error) {\r\n    yield put(errorRegistro(\"Error inesperado\"));\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* locationChangeSaga() {\r\n  yield put(saveSessionStateAction());\r\n}\r\n\r\n\r\nfunction* actualizarUsuarioSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.editarUsuario, action.payload);\r\n    yield put(actualizarUsuarioDoneAction(data));\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n// All users position\r\nfunction* createPositionSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.createPosition, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(createPositionDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* updatePositionSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.updatePosition, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(updatePositionDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* getFromUserPositionSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.getPositionFromUser, action.payload);\r\n    if (data.status === \"200\") {\r\n      yield put(getFromUserPositionDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Domiciliarios position\r\nfunction* getFromDomiciliarioPositionSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.getPositionFromUser, action.payload);\r\n    if (data.status === \"200\") {\r\n      yield put(getFromDomiciliarioPositionDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n// Clients position\r\nfunction* getFromClientPositionSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.getPositionFromUser, action.payload);\r\n    if (data.status === \"200\") {\r\n      yield put(getFromClientPositionDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// All users registred\r\nfunction* getAllUserSaga() {\r\n  try {\r\n    const { data } = yield call(api.getAllUsers);\r\n    if (data.status === \"200\") {\r\n      yield put(getAllUserDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// All clients registred\r\nfunction* getAllClientSaga() {\r\n  try {\r\n    const { data } = yield call(api.getAllClients);\r\n    if (data.status === \"200\") {\r\n      yield put(getAllClientDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n// All dealers registred\r\nfunction* getAllDomiciliarioSaga() {\r\n  try {\r\n    const { data } = yield call(api.getAllDomiciliarios);\r\n    if (data.status === \"200\") {\r\n      yield put(getAllDomiciliarioDoneAction(data));\r\n    } else {\r\n      yield put(loginError(data.message));\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Products\r\n\r\nfunction* getAllProductSaga() {\r\n  try {\r\n    const { data } = yield call(api.getAllProducts);\r\n    if (data.status === \"200\") {\r\n      yield put(getAllProductDoneAction(data));\r\n    } else {\r\n      console.log('No products')\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction* createProductSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.createProduct, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(createProductDoneAction(data));\r\n    } else {\r\n      yield put(errorCreateProduct(data.status));\r\n    }\r\n  } catch (error) {\r\n    yield put(errorCreateProduct(\"Error inesperado\"));\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* updateProductSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.updateProduct, action.payload);\r\n    yield put(updateProductDoneAction(data));\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* deleteProductSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.deleteProduct, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(deleteProductDoneAction(data));\r\n    } else {\r\n      yield put(errorDeleteProduct(data.status));\r\n    }\r\n  } catch (error) {\r\n    yield put(errorDeleteProduct(\"Error inesperado\"));\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Orders\r\n\r\nfunction* getAllOrderSaga() {\r\n  try {\r\n    const { data } = yield call(api.getAllOrders);\r\n    if (data.status === \"200\") {\r\n      yield put(getAllOrderDoneAction(data));\r\n    } else {\r\n      console.log('No products')\r\n    }\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction* createOrderSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.createOrder, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(createOrderDoneAction(data));\r\n    } else {\r\n      yield put(errorCreateOrder(data.status));\r\n    }\r\n  } catch (error) {\r\n    yield put(errorCreateOrder(\"Error inesperado\"));\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\nfunction* updateOrderSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.updateOrder, action.payload);\r\n    yield put(updateOrderDoneAction(data));\r\n  } catch (error) {\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction* deleteOrderSaga(action) {\r\n  try {\r\n    const { data } = yield call(api.deleteOrder, action.payload);\r\n    if (data.status === 200) {\r\n      yield put(deleteOrderDoneAction(data));\r\n    } else {\r\n      yield put(errorDeleteOrder(data.status));\r\n    }\r\n  } catch (error) {\r\n    yield put(errorDeleteOrder(\"Error inesperado\"));\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      // Do nothing\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport function* rootSaga() {\r\n  yield takeLatest(loginAction.type, loginSaga);\r\n  yield takeLatest(loginDoneAction.type, loginDoneSaga);\r\n  yield takeLatest(actualizarUsuarioAction.type, actualizarUsuarioSaga);\r\n  yield takeLatest(registerAction.type, registerSaga);\r\n  yield takeLatest(createPositionAction.type, createPositionSaga);\r\n  yield takeLatest(updatePositionAction.type, updatePositionSaga);\r\n  yield takeLatest(getFromUserPositionAction.type, getFromUserPositionSaga);\r\n  yield takeLatest(LOCATION_CHANGE, locationChangeSaga);\r\n\r\n  // Products\r\n  yield takeLatest(getAllProductAction.type, getAllProductSaga);\r\n  yield takeLatest(createProductAction.type, createProductSaga);\r\n  yield takeLatest(updateProductAction.type, updateProductSaga);\r\n  yield takeLatest(deleteProductAction.type, deleteProductSaga);\r\n\r\n  // Users\r\n  yield takeLatest(getAllUserAction.type, getAllUserSaga);\r\n  yield takeLatest(getAllClientAction.type, getAllClientSaga);\r\n  yield takeLatest(getAllDomiciliarioAction.type, getAllDomiciliarioSaga);\r\n  \r\n  // Dealers location\r\n  yield takeLatest(getFromDomiciliarioPositionAction.type, getFromDomiciliarioPositionSaga);\r\n  yield takeLatest(getFromClientPositionAction.type, getFromClientPositionSaga);\r\n\r\n\r\n  // Orders\r\n  yield takeLatest(getAllOrderAction.type, getAllOrderSaga);\r\n  yield takeLatest(createOrderAction.type, createOrderSaga);\r\n  yield takeLatest(updateOrderAction.type, updateOrderSaga);\r\n  yield takeLatest(deleteOrderAction.type, deleteOrderSaga);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}