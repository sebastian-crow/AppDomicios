{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/views/pages/authentication/firebase-forms/FirebaseLogin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginAction } from \"../../../../store/storeAddresses/store/reducer\";\nimport { push } from \"redux-first-history\"; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Box, Button, Checkbox, Divider, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Stack, Typography } from '@material-ui/core'; // third party\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik'; // project imports\n\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // assets\n\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Google from \"assets/images/icons/social-google.svg\"; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  redButton: {\n    fontSize: '1rem',\n    fontWeight: 500,\n    backgroundColor: theme.palette.grey[50],\n    border: '1px solid',\n    borderColor: theme.palette.grey[100],\n    color: theme.palette.grey[700],\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: theme.palette.primary.light\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '0.875rem'\n    }\n  },\n  signDivider: {\n    flexGrow: 1\n  },\n  signText: {\n    cursor: 'unset',\n    margin: theme.spacing(2),\n    padding: '5px 56px',\n    borderColor: `${theme.palette.grey[100]} !important`,\n    color: `${theme.palette.grey[900]}!important`,\n    fontWeight: 500\n  },\n  loginIcon: {\n    marginRight: '16px',\n    [theme.breakpoints.down('sm')]: {\n      marginRight: '8px'\n    }\n  },\n  loginInput: { ...theme.typography.customInput\n  }\n})); //= ===========================|| FIREBASE - LOGIN ||============================//\n\nconst FirebaseLogin = (props, { ...others\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const customization = useSelector(state => state.customization);\n  const scriptedRef = useScriptRef();\n  const [checked, setChecked] = React.useState(true);\n\n  const googleHandler = async () => {\n    console.error('Login');\n  };\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const dispatch = useDispatch();\n  const [documentoIdentidad, setDocumentoIdentidad] = useState(null);\n  const [password, setPassword] = useState(null);\n  const error = useSelector(state => state.login.errorInicio);\n\n  const handleLogin = event => {\n    event.preventDefault();\n    dispatch(loginAction({\n      documentoIdentidad,\n      password\n    }));\n    dispatch(push(\"/\"));\n  };\n\n  const handleChangeEmail = event => {\n    setDocumentoIdentidad(event.target.value);\n  };\n\n  const handleChangePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      justifyContent: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disableElevation: true,\n            fullWidth: true,\n            className: classes.redButton,\n            onClick: googleHandler,\n            size: \"large\",\n            variant: \"contained\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Google,\n              alt: \"google\",\n              width: \"20px\",\n              className: classes.loginIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), \" Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            alignItems: 'center',\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.signDivider,\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              className: classes.signText,\n              sx: {\n                borderRadius: `${customization.borderRadius}px`\n              },\n              disableRipple: true,\n              disabled: true,\n              children: \"OR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: classes.signDivider,\n            orientation: \"horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        container: true,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Sign in with Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: 'info@codedthemes.com',\n        password: '123456',\n        submit: null\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        password: Yup.string().max(255).required('Password is required')\n      }),\n      onSubmit: async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          if (scriptedRef.current) {\n            setStatus({\n              success: true\n            });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n\n          if (scriptedRef.current) {\n            setStatus({\n              success: false\n            });\n            setErrors({\n              submit: err.message\n            });\n            setSubmitting(false);\n          }\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        ...others,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.email && errors.email),\n          className: classes.loginInput,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-email-login\",\n            children: \"Email Address / Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-email-login\",\n            type: \"email\",\n            value: values.email,\n            name: \"email\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            label: \"Email Address / Username\",\n            inputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-email-login\",\n            children: [' ', errors.email, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          error: Boolean(touched.password && errors.password),\n          className: classes.loginInput,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-password-login\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password-login\",\n            type: showPassword ? 'text' : 'password',\n            value: values.password,\n            name: \"password\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 61\n                }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 78\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this),\n            label: \"Password\",\n            inputProps: {\n              classes: {\n                notchedOutline: classes.notchedOutline\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            id: \"standard-weight-helper-text-password-login\",\n            children: [' ', errors.password, ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          spacing: 1,\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked,\n              onChange: event => setChecked(event.target.checked),\n              name: \"checked\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            component: Link,\n            to: \"/pages/forgot-password/forgot-password3\",\n            color: \"secondary\",\n            sx: {\n              textDecoration: 'none'\n            },\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            error: true,\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disableElevation: true,\n              disabled: isSubmitting,\n              fullWidth: true,\n              size: \"large\",\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"secondary\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FirebaseLogin, \"rMc7KOQkgMMClP8zaTyQU8jYvzg=\", false, function () {\n  return [useStyles, useSelector, useScriptRef, useDispatch, useSelector];\n});\n\n_c = FirebaseLogin;\nexport default FirebaseLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseLogin\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/views/pages/authentication/firebase-forms/FirebaseLogin.js"],"names":["React","useDispatch","useSelector","Link","loginAction","push","makeStyles","Box","Button","Checkbox","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Stack","Typography","Yup","Formik","useScriptRef","AnimateButton","Visibility","VisibilityOff","useStyles","theme","redButton","fontSize","fontWeight","backgroundColor","palette","grey","border","borderColor","color","textTransform","primary","light","breakpoints","down","signDivider","flexGrow","signText","cursor","margin","spacing","padding","loginIcon","marginRight","loginInput","typography","customInput","FirebaseLogin","props","others","classes","customization","state","scriptedRef","checked","setChecked","useState","googleHandler","console","error","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","dispatch","documentoIdentidad","setDocumentoIdentidad","password","setPassword","login","errorInicio","handleLogin","handleChangeEmail","target","value","handleChangePassword","Google","alignItems","display","borderRadius","mb","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","notchedOutline","textDecoration","mt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginAction } from \"../../../../store/storeAddresses/store/reducer\";\nimport { push } from \"redux-first-history\";\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport Google from 'assets/images/icons/social-google.svg';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: `${theme.palette.grey[100]} !important`,\n        color: `${theme.palette.grey[900]}!important`,\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//= ===========================|| FIREBASE - LOGIN ||============================//\n\nconst FirebaseLogin = (props, { ...others }) => {\n    const classes = useStyles();\n\n    const customization = useSelector((state) => state.customization);\n    const scriptedRef = useScriptRef();\n    const [checked, setChecked] = React.useState(true);\n\n    const googleHandler = async () => {\n        console.error('Login');\n    };\n\n    const [showPassword, setShowPassword] = React.useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const dispatch = useDispatch();\n    const [documentoIdentidad, setDocumentoIdentidad] = useState(null);\n    const [password, setPassword] = useState(null);\n    const error = useSelector((state) => state.login.errorInicio);\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        dispatch(loginAction({ documentoIdentidad, password }));\n        dispatch(push(\"/\"));\n    };\n\n    const handleChangeEmail = (event) => {\n        setDocumentoIdentidad(event.target.value);\n    };\n\n    const handleChangePassword = (event) => {\n        setPassword(event.target.value);\n    };\n\n\n    return (\n        <>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" className={classes.loginIcon} /> Sign in with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: `${customization.borderRadius}px` }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        sx={{\n                            mb: 2\n                        }}\n                    >\n                        <Typography variant=\"subtitle1\">Sign in with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address / Username\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography\n                                variant=\"subtitle1\"\n                                component={Link}\n                                to=\"/pages/forgot-password/forgot-password3\"\n                                color=\"secondary\"\n                                sx={{ textDecoration: 'none' }}\n                            >\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign in\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </>\n    );\n};\n\nexport default FirebaseLogin;\n"]},"metadata":{},"sourceType":"module"}