{"ast":null,"code":"var _jsxFileName = \"/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/ui-component/addresses/maps/MapComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\nimport { getAllOrderAction } from '../../../store/storeAddresses/store/reducer';\nimport { useDispatch, useSelector } from \"react-redux\"; // Proof Markers\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markers = [{\n  id: 1,\n  name: \"Copacabana\",\n  position: {\n    lat: 6.343636,\n    lng: -75.512527\n  }\n}, {\n  id: 2,\n  name: \"Medellin\",\n  position: {\n    lat: 6.247638,\n    lng: -75.56815\n  }\n}, {\n  id: 3,\n  name: \"Bello\",\n  position: {\n    lat: 6.339396,\n    lng: -75.5451\n  }\n}, {\n  id: 4,\n  name: \"Marinilla\",\n  position: {\n    lat: 6.1684,\n    lng: -75.332129\n  }\n}];\n\nfunction Map() {\n  _s();\n\n  const dispatch = useDispatch();\n  const orders = useSelector(state => state.ui.orders);\n  const user = useSelector(state => state.login.usuario.user);\n  const ordersCopy = [...orders];\n  const ownDealerOrders = [];\n  ordersCopy.map(order => {\n    if (order.domiciliario.id === user._id) {\n      ownDealerOrders.push(order);\n    }\n  });\n  const dealerMarkers = []; // Once we done with the geocoding problem, we gonna to use this markers\n\n  ownDealerOrders.map(order => {\n    return dealerMarkers.push({\n      id: order._id,\n      name: `${order.orderName} by ${order.cliente.name}`,\n      //position: order.direccion.coords\n      position: {\n        lat: 6.1684,\n        lng: -75.332129\n      }\n    });\n  });\n  console.log('Dealer Markers', dealerMarkers);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  const handleActiveMarker = marker => {\n    if (marker === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(marker);\n  };\n\n  const handleOnLoad = map => {\n    const bounds = new window.google.maps.LatLngBounds();\n    markers.forEach(({\n      position\n    }) => bounds.extend(position));\n    map.fitBounds(bounds);\n  };\n\n  useEffect(() => {\n    dispatch(getAllOrderAction());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    onLoad: handleOnLoad,\n    onClick: () => setActiveMarker(null),\n    mapContainerStyle: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: markers.map(({\n      id,\n      name,\n      position\n    }) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      onClick: () => handleActiveMarker(id),\n      children: activeMarker === id ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onCloseClick: () => setActiveMarker(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this) : null\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"n249QgyQW0JhlYoG1zrmE2SW/H8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/berry-free-react-admin-template/src/ui-component/addresses/maps/MapComponent.js"],"names":["React","useState","useEffect","GoogleMap","InfoWindow","Marker","getAllOrderAction","useDispatch","useSelector","markers","id","name","position","lat","lng","Map","dispatch","orders","state","ui","user","login","usuario","ordersCopy","ownDealerOrders","map","order","domiciliario","_id","push","dealerMarkers","orderName","cliente","console","log","activeMarker","setActiveMarker","handleActiveMarker","marker","handleOnLoad","bounds","window","google","maps","LatLngBounds","forEach","extend","fitBounds","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\nimport { getAllOrderAction } from '../../../store/storeAddresses/store/reducer'\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\n// Proof Markers\nconst markers = [\n  {\n    id: 1,\n    name: \"Copacabana\",\n    position: { lat: 6.343636, lng: -75.512527 }\n  },\n  {\n    id: 2,\n    name: \"Medellin\", \n    position: { lat: 6.247638, lng: -75.56815 }\n  },\n  {\n    id: 3,\n    name: \"Bello\",\n    position: { lat: 6.339396, lng: -75.5451 }\n  },\n  {\n    id: 4,\n    name: \"Marinilla\",\n    position: { lat: 6.1684, lng: -75.332129 }\n  }\n];\n\n\n\n\n\n\n\nfunction Map() {\n    const dispatch = useDispatch();\n  const orders = useSelector((state) => state.ui.orders)\n  const user = useSelector((state) => state.login.usuario.user)\n  const ordersCopy = [...orders]\n\n  const ownDealerOrders = []\n  ordersCopy.map((order) => {\n\tif(order.domiciliario.id === user._id ) {\n\t\townDealerOrders.push(order)\n\t}\t\n  })\n\n  const dealerMarkers = [] // Once we done with the geocoding problem, we gonna to use this markers\n  ownDealerOrders.map((order) => {\n\treturn dealerMarkers.push({\n\t\tid: order._id,\n\t\tname: `${order.orderName} by ${order.cliente.name}`,\n\t\t//position: order.direccion.coords\n\t\tposition: { lat: 6.1684, lng: -75.332129 } \n\n\t})\n  })\n\n  console.log('Dealer Markers',dealerMarkers)\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  const handleActiveMarker = (marker) => {\n    if (marker === activeMarker) {\n      return;\n    }\n    setActiveMarker(marker);\n  };\n\n  const handleOnLoad = (map) => {\n    const bounds = new window.google.maps.LatLngBounds()\n    markers.forEach(({ position }) => bounds.extend(position));\n    map.fitBounds(bounds);\n  };\n\n  useEffect(() => {\n\tdispatch(getAllOrderAction())\n  }, [dispatch])\n\n  return (\n    <GoogleMap\n      onLoad={handleOnLoad}\n      onClick={() => setActiveMarker(null)}\n      mapContainerStyle={{ width: \"100vw\", height: \"100vh\" }}\n    >\n      {markers.map(({ id, name, position }) => (\n        <Marker\n          key={id}\n          position={position}\n          onClick={() => handleActiveMarker(id)}\n        >\n          {activeMarker === id ? (\n            <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n              <div>{name}</div>\n            </InfoWindow>\n          ) : null}\n        </Marker>\n      ))}\n    </GoogleMap>\n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}