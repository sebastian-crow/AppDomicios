{"ast":null,"code":"// import { unstable_batchedUpdates } from \"react-dom\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createBrowserHistory } from \"history\";\nimport { createReduxHistoryContext } from \"redux-first-history\";\nimport { createRootReducer } from \"./reducer\";\nimport { rootSaga } from \"./middleware/saga\";\nconst {\n  createReduxHistory,\n  routerMiddleware,\n  routerReducer\n} = createReduxHistoryContext({\n  history: createBrowserHistory() // other options if needed\n  // batch: unstable_batchedUpdates,\n\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [routerMiddleware, ...getDefaultMiddleware({\n  thunk: false\n}), sagaMiddleware];\nexport const store = configureStore({\n  reducer: createRootReducer(routerReducer),\n  middleware // preloadedState,\n\n}); // make sure to start saga before creating history listener\n\nsagaMiddleware.run(rootSaga);\nexport const history = createReduxHistory(store);","map":{"version":3,"sources":["/home/raven/Documents/programming/proyects/addresses_app/bery/addresses_app/src/store/storeAddresses/store/configureStore.js"],"names":["configureStore","getDefaultMiddleware","createSagaMiddleware","createBrowserHistory","createReduxHistoryContext","createRootReducer","rootSaga","createReduxHistory","routerMiddleware","routerReducer","history","sagaMiddleware","middleware","thunk","store","reducer","run"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAGA,MAAM;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA,gBAAtB;AAAwCC,EAAAA;AAAxC,IACJL,yBAAyB,CAAC;AACxBM,EAAAA,OAAO,EAAEP,oBAAoB,EADL,CAExB;AACA;;AAHwB,CAAD,CAD3B;AAOA,MAAMQ,cAAc,GAAGT,oBAAoB,EAA3C;AACA,MAAMU,UAAU,GAAG,CACjBJ,gBADiB,EAEjB,GAAGP,oBAAoB,CAAC;AACtBY,EAAAA,KAAK,EAAE;AADe,CAAD,CAFN,EAKjBF,cALiB,CAAnB;AAQA,OAAO,MAAMG,KAAK,GAAGd,cAAc,CAAC;AAClCe,EAAAA,OAAO,EAAEV,iBAAiB,CAACI,aAAD,CADQ;AAElCG,EAAAA,UAFkC,CAGlC;;AAHkC,CAAD,CAA5B,C,CAMP;;AACAD,cAAc,CAACK,GAAf,CAAmBV,QAAnB;AAEA,OAAO,MAAMI,OAAO,GAAGH,kBAAkB,CAACO,KAAD,CAAlC","sourcesContent":["// import { unstable_batchedUpdates } from \"react-dom\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { createReduxHistoryContext } from \"redux-first-history\";\r\nimport { createRootReducer } from \"./reducer\";\r\nimport { rootSaga } from \"./middleware/saga\";\r\n\r\n\r\nconst { createReduxHistory, routerMiddleware, routerReducer } =\r\n  createReduxHistoryContext({\r\n    history: createBrowserHistory(),\r\n    // other options if needed\r\n    // batch: unstable_batchedUpdates,\r\n  });\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  routerMiddleware,\r\n  ...getDefaultMiddleware({\r\n    thunk: false,\r\n  }),\r\n  sagaMiddleware,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: createRootReducer(routerReducer),\r\n  middleware,\r\n  // preloadedState,\r\n});\r\n\r\n// make sure to start saga before creating history listener\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const history = createReduxHistory(store);\r\n"]},"metadata":{},"sourceType":"module"}